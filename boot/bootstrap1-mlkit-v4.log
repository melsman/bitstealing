[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Initial.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Initial.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/GENERAL.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/General.sml]
*** Boxities: [order:enum]
*** Boxities: [option:boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/General.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/OPTION.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Option.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Option.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Initial2.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Initial2.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/LIST.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/List.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/List.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/LIST_PAIR.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/ListPair.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ListPair.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/polytable.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/INT_INF_REP.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/TableSlice.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/IntInfRep.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/IntInfRep.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/VECTOR.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Vector.sml]
[compiling body of functor PolyTable (from source basis.mlb->polytable.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Vector.sml.code3.s]
[compiling body of functor PolyTable end]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Vector.sml.code4.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Vector.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/VECTOR_SLICE.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/VectorSlice.sml]
[compiling body of functor TableSlice (from source basis.mlb->TableSlice.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/VectorSlice.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/VectorSlice.sml.code3.s]
[compiling body of functor TableSlice end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/ARRAY.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Array.sml]
[compiling body of functor PolyTable (from source basis.mlb->polytable.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Array.sml.code3.s]
[compiling body of functor PolyTable end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/ARRAY_SLICE.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/ArraySlice.sml]
[compiling body of functor TableSlice (from source basis.mlb->TableSlice.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ArraySlice.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ArraySlice.sml.code3.s]
[compiling body of functor TableSlice end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/ARRAY2.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Array2.sml]
*** Boxities: [traversal:enum]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Array2.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MONO_VECTOR.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MONO_ARRAY.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/ByteTable.sml]
[compiling body of functor ByteTable (from source basis.mlb->ByteTable.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteTable.sml.code3.s]
[compiling body of functor ByteTable end]
[compiling body of functor ByteTable (from source basis.mlb->ByteTable.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteTable.sml.code7.s]
[compiling body of functor ByteTable end]
[compiling body of functor ByteTable (from source basis.mlb->ByteTable.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteTable.sml.code10.s]
[compiling body of functor ByteTable end]
[compiling body of functor ByteTable (from source basis.mlb->ByteTable.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteTable.sml.code14.s]
[compiling body of functor ByteTable end]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteTable.sml.code4.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteTable.sml.code11.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MONO_VECTOR_SLICE.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MONO_ARRAY_SLICE.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/ByteSlice.sml]
[compiling body of functor ByteSlice (from source basis.mlb->ByteSlice.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code3.s]
[compiling body of functor ByteSlice end]
[compiling body of functor ByteSlice (from source basis.mlb->ByteSlice.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code4.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code6.s]
[compiling body of functor ByteSlice end]
[compiling body of functor ByteSlice (from source basis.mlb->ByteSlice.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code7.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code9.s]
[compiling body of functor ByteSlice end]
[compiling body of functor ByteSlice (from source basis.mlb->ByteSlice.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code10.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/ByteSlice.sml.code12.s]
[compiling body of functor ByteSlice end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MONO_ARRAY2.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/STRING_CVT.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/StringCvt.sml]
*** Boxities: [radix:enum]
*** Boxities: [realfmt:unb-all]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/StringCvt.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/STR_BASE.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/StrBase.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/StrBase.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Char.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Char.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/String.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/String.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/CHAR.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/STRING.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/SUBSTRING.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Substring.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Substring.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/TEXT.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/BOOL.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/WORD.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/INTEGER.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/IO.sml]
*** Boxities: [buffer_mode:enum]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/IO.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Text.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Bool.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Bool.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Word.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Int.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Int.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Word64.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word64.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Int32.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Int32.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Word63.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word63.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Int31.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Int31.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Word32.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word32.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Int63.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Int63.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Word31.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word31.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Int64.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Int64.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Word8.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word8.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/WordN.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Word16.sml]
[compiling body of functor WordN (from source basis.mlb->WordN.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word16.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Word16.sml.code2.s]
[compiling body of functor WordN end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/PACK_WORD.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Pack32Little.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Pack32Little.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Pack32Big.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Pack32Big.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/BYTE.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/IntN.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/BitFlags.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Byte.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Byte.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Ints.sml]
[compiling body of functor IntN (from source basis.mlb->IntN.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Ints.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Ints.sml.code2.s]
[compiling body of functor IntN end]
[compiling body of functor IntN (from source basis.mlb->IntN.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Ints.sml.code3.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Ints.sml.code4.s]
[compiling body of functor IntN end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/IEEE_REAL.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/INT_INF.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/wordtable-functors.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MATH.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/OS_PATH.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/COMMAND_LINE.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/IEEEReal.sml]
*** Boxities: [real_order:enum]
*** Boxities: [float_class:enum]
*** Boxities: [rounding_mode:enum]
*** Boxities: [exp:boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/IEEEReal.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/IntInf.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/IntInf.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/wordtables.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/wordtables.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Math.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Math.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Path.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Path.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/CommandLine.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/CommandLine.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/inttables.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/inttables.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/REAL.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Real.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Real.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/PACK_REAL.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/PackRealLittle.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/PackRealLittle.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/PackRealBig.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/PackRealBig.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/TIME.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/RANDOM.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Time.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Time.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Random.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Random.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/OS_PROCESS.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/DATE.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/TIMER.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/OS_FILE_SYS.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Process.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Process.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Date.sml]
*** Boxities: [weekday:enum]
*** Boxities: [month:enum]
*** Boxities: [date:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Date.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Timer.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Timer.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/FileSys.sml]
*** Boxities: [access_mode:enum]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/FileSys.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/OS_IO.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/OS.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/OS.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/OSError.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/OSError.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/NET_HOST_DB.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/prim-io.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/cleaner.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/NetHostDB.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/NetHostDB.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/prim-io.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/cleaner.sml]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/cleaner.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/SOCKET.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/text-prim-io.sml]
[compiling body of functor PrimIO (from source basis.mlb->prim-io.sml) begin]
*** Boxities: [reader:single boxed]
*** Boxities: [writer:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/text-prim-io.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/text-prim-io.sml.code2.s]
[compiling body of functor PrimIO end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Socket.sml]
*** Boxities: [af:enum]
*** Boxities: [sock_addr0:unb-all]
*** Boxities: [stream:enum]
*** Boxities: [passive:enum]
*** Boxities: [active:enum]
*** Boxities: [shutdown_mode:enum]
*** Boxities: [inet:enum]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Socket.sml.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/bin-prim-io.sml]
[compiling body of functor PrimIO (from source basis.mlb->prim-io.sml) begin]
*** Boxities: [reader:single boxed]
*** Boxities: [writer:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/bin-prim-io.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/bin-prim-io.sml.code2.s]
[compiling body of functor PrimIO end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/INET_SOCK.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/BIT_FLAGS.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_IO.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_PROCESS.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_PROC_ENV.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_FILE_SYS.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_SIGNAL.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_ERROR.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_SYS_DB.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX_TTY.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/POSIX.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Posix.sml]
*** Boxities: [waitpid_arg:boxed]
*** Boxities: [exit_status:boxed]
*** Boxities: [killpid_arg:boxed]
*** Boxities: [waitpid_arg:boxed]
[compiling body of functor BitFlags (from source basis.mlb->BitFlags.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code4.s]
[compiling body of functor BitFlags end]
[compiling body of functor BitFlags (from source basis.mlb->BitFlags.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code10.s]
[compiling body of functor BitFlags end]
[compiling body of functor BitFlags (from source basis.mlb->BitFlags.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code13.s]
[compiling body of functor BitFlags end]
[compiling body of functor BitFlags (from source basis.mlb->BitFlags.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code16.s]
[compiling body of functor BitFlags end]
*** Boxities: [open_mode:enum]
*** Boxities: [access_mode:enum]
*** Boxities: [whence:enum]
*** Boxities: [lock_type:enum]
[compiling body of functor CreateWriterReader (from source basis.mlb->Posix.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code20.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code21.s]
[compiling body of functor CreateWriterReader end]
[compiling body of functor CreateWriterReader (from source basis.mlb->Posix.sml) begin]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code22.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code23.s]
[compiling body of functor CreateWriterReader end]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code2.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code6.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code7.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code8.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code18.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code19.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code24.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Posix.sml.code25.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/stream-io.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/stream-io.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/imperative-io.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/imperative-io.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/text-stream-io.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/text-io.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/text-io.sml]
[compiling body of functor ImperativeIOExtra (from source basis.mlb->imperative-io.sml) begin]
[compiling body of functor StreamIOExtraFile (from source basis.mlb->stream-io.sml) begin]
[compiling body of functor StreamIOExtra (from source basis.mlb->stream-io.sml) begin]
*** Boxities: [buf:single boxed]
*** Boxities: [bufferMode:unb-all]
*** Boxities: [state:enum]
*** Boxities: [outstream:single boxed]
*** Boxities: [out_pos:single boxed]
*** Boxities: [state:unb-all,buf:single boxed]
*** Boxities: [instream:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/text-io.sml.code4.s]
[compiling body of functor StreamIOExtra end]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/text-io.sml.code5.s]
[compiling body of functor StreamIOExtraFile end]
*** Boxities: [outstream:single boxed]
*** Boxities: [state:unb-all]
*** Boxities: [instream:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/text-io.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/text-io.sml.code6.s]
[compiling body of functor ImperativeIOExtra end]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/text-io.sml.code7.s]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/bin-stream-io.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/bin-io.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/bin-io.sml]
[compiling body of functor ImperativeIOExtra (from source basis.mlb->imperative-io.sml) begin]
[compiling body of functor StreamIOExtraFile (from source basis.mlb->stream-io.sml) begin]
[compiling body of functor StreamIOExtra (from source basis.mlb->stream-io.sml) begin]
*** Boxities: [buf:single boxed]
*** Boxities: [bufferMode:unb-all]
*** Boxities: [state:enum]
*** Boxities: [outstream:single boxed]
*** Boxities: [out_pos:single boxed]
*** Boxities: [state:unb-all,buf:single boxed]
*** Boxities: [instream:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/bin-io.sml.code4.s]
[compiling body of functor StreamIOExtra end]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/bin-io.sml.code5.s]
[compiling body of functor StreamIOExtraFile end]
*** Boxities: [outstream:single boxed]
*** Boxities: [state:unb-all]
*** Boxities: [instream:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/bin-io.sml.code1.s]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/MLB/RI_GC/bin-io.sml.code6.s]
[compiling body of functor ImperativeIOExtra end]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/UNIX.sig]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/io/io-close.sml]
[reading source file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/Unix.sml]
*** Boxities: [str:boxed]
*** Boxities: [proc:single boxed]
[wrote X64 code file:	/Users/mael/gits/bitstealing/boot/bootstrap1/mlkit-v3/basis/MLB/RI_GC/Unix.sml.s]
[reading source file:	../Edlib/EDLIB_GENERAL.sml]
[reading source file:	../Pickle/POLYHASH.sig]
[reading source file:	../Pickle/eqhashdyn2.sml]
*** Boxities: [method:boxed]
[wrote X64 code file:	../Pickle/MLB/RI_GC/eqhashdyn2.sml.s]
[reading source file:	../Common/../Kitlib/LISTSORT.sig]
[reading source file:	../Common/../Kitlib/POLYHASH.sig]
[reading source file:	../Common/../Kitlib/SPLAYTREE.sig]
[reading source file:	../Common/CRASH.sig]
[reading source file:	../Common/../lib/github.com/diku-dk/sml-uref/uref.sig]
[reading source file:	../Common/MD5.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/MD5.sml.s]
[reading source file:	../Manager/../Tools/MlbMake/MLB_FILESYS.sml]
[reading source file:	../Manager/../Tools/MlbMake/MlbUtil.sml]
[wrote X64 code file:	../Manager/../Tools/MlbMake/MLB/RI_GC/MlbUtil.sml.s]
[reading source file:	../Edlib/EdlibGeneral.sml]
*** Boxities: [Option:boxed]
*** Boxities: [Result:boxed]
[wrote X64 code file:	../Edlib/MLB/RI_GC/EdlibGeneral.sml.s]
[reading source file:	../Pickle/Polyhash.sml]
[wrote X64 code file:	../Pickle/MLB/RI_GC/Polyhash.sml.s]
[reading source file:	../Pickle/bitstream.sig]
[reading source file:	../Common/../Kitlib/Listsort.sml]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Listsort.sml.s]
[reading source file:	../Common/../Kitlib/Polyhash.sml]
*** Boxities: [bucket_t:unb-low]
*** Boxities: [hash_table:single boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Polyhash.sml.s]
[reading source file:	../Common/../Kitlib/Splaytree.sml]
*** Boxities: [splay:unb-low]
*** Boxities: [ans_t:boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Splaytree.sml.s]
[reading source file:	../Common/Crash.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/Crash.sml.s]
[reading source file:	../Common/../lib/github.com/diku-dk/sml-uref/uref.sml]
*** Boxities: [urefC:unb-all]
[wrote X64 code file:	../Common/../lib/github.com/diku-dk/sml-uref/MLB/RI_GC/uref.sml.s]
[reading source file:	../Manager/../Tools/MlbMake/MlbFileSys.sml]
[wrote X64 code file:	../Manager/../Tools/MlbMake/MLB/RI_GC/MlbFileSys.sml.s]
[reading source file:	../Edlib/LIST.sml]
[reading source file:	../Pickle/bitstream.sml]
[wrote X64 code file:	../Pickle/MLB/RI_GC/bitstream.sml.s]
[reading source file:	../Common/../Kitlib/SPLAYMAP.sig]
[reading source file:	../Common/../Kitlib/BINARYMAP.sig]
[reading source file:	../Common/../Kitlib/BINARYSET.sig]
[reading source file:	../Common/../Kitlib/REG_EXP.sml]
[reading source file:	../Common/../Kitlib/SUSP.sig]
[reading source file:	../Edlib/edList.sml]
[wrote X64 code file:	../Edlib/MLB/RI_GC/edList.sml.s]
[reading source file:	../Pickle/pickle.sig]
[reading source file:	../Common/../Kitlib/Splaymap.sml]
*** Boxities: [dict:single boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Splaymap.sml.s]
[reading source file:	../Common/../Kitlib/Binarymap.sml]
*** Boxities: [tree:unb-low]
*** Boxities: [dict:single boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Binarymap.sml.s]
[reading source file:	../Common/../Kitlib/INTSET.sig]
[reading source file:	../Common/../Kitlib/Susp.sml]
*** Boxities: [thunk:boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Susp.sml.s]
[reading source file:	../Edlib/EQ_SET.sml]
[reading source file:	../Pickle/pickle.sml]
*** Boxities: [cache:boxed]
*** Boxities: [vcache:unb-low]
*** Boxities: [typ:boxed]
*** Boxities: [pu:single boxed]
[wrote X64 code file:	../Pickle/MLB/RI_GC/pickle.sml.s]
[reading source file:	../Common/../Kitlib/SPLAYSET.sig]
[reading source file:	../Common/../Kitlib/INTMAP.sig]
[reading source file:	../Common/../Kitlib/Binaryset.sml]
*** Boxities: [tree:unb-low]
*** Boxities: [set:single boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Binaryset.sml.s]
[reading source file:	../Edlib/SET.sig]
[reading source file:	../Common/REPORT.sig]
[reading source file:	COMP_BASIS.sml]
[reading source file:	../Common/../Kitlib/Splayset.sml]
*** Boxities: [set:single boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Splayset.sml.s]
[reading source file:	../Common/../Kitlib/Intmap.sml]
*** Boxities: [intmap:unb-low]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Intmap.sml.s]
[reading source file:	../Common/../Kitlib/Intset.sml]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/Intset.sml.s]
[reading source file:	../Edlib/LIST_PAIR.sml]
[reading source file:	../Common/Report.sml]
*** Boxities: [Report:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/Report.sml.s]
[reading source file:	COMP_BASIS_GEN.sml]
[reading source file:	../Common/../Kitlib/RegExp.sml]
*** Boxities: [atom:unb-low]
*** Boxities: [regexp_:boxed]
*** Boxities: [token:boxed]
[wrote X64 code file:	../Common/../Kitlib/MLB/RI_GC/RegExp.sml.s]
[reading source file:	../Edlib/edListPair.sml]
[wrote X64 code file:	../Edlib/MLB/RI_GC/edListPair.sml.s]
[reading source file:	../Common/TIMESTAMP.sig]
[reading source file:	COMPILE_GEN.sml]
[reading source file:	../Edlib/LIST_SORT.sml]
[reading source file:	../Common/Timestamp.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/Timestamp.sml.s]
[reading source file:	COMPILE.sig]
[reading source file:	../Edlib/ListSort.sml]
[wrote X64 code file:	../Edlib/MLB/RI_GC/ListSort.sml.s]
[reading source file:	../Common/PRETTYPRINT.sig]
[reading source file:	Lambda/OPT_LAMBDA.sml]
[reading source file:	../Edlib/Set.sml]
*** Boxities: [Set:single unb-low]
[wrote X64 code file:	../Edlib/MLB/RI_GC/Set.sml.s]
[reading source file:	../Common/ListUtils.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/ListUtils.sml.s]
[reading source file:	Lambda/LAMBDA_STAT_SEM.sml]
[reading source file:	../Edlib/EqSet.sml]
*** Boxities: [Set:single unb-low]
[wrote X64 code file:	../Edlib/MLB/RI_GC/EqSet.sml.s]
[reading source file:	../Common/PrettyPrint.sml]
*** Boxities: [childsep:unb-all]
*** Boxities: [StringTree:unb-all]
*** Boxities: [minipage:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/PrettyPrint.sml.s]
[reading source file:	Lambda/ELIMINATE_EQ.sml]
[reading source file:	../Edlib/ORDERING.sml]
[reading source file:	../Common/ORDER.sig]
[reading source file:	Lambda/COMPILE_DEC.sml]
[reading source file:	../Common/MONO_FINMAP.sml]
[reading source file:	../Common/MonoFinMap.sml]
[reading source file:	../Common/IntFinMapPT.sml]
*** Boxities: [map:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/IntFinMapPT.sml.s]
[reading source file:	../Common/OrderFinMap.sml]
[reading source file:	../Common/FLAGS.sig]
[reading source file:	../Common/BasisCompat.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/BasisCompat.sml.s]
[reading source file:	../Common/StringFinMap.sml]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/StringFinMap.sml.code1.s]
[wrote X64 code file:	../Common/MLB/RI_GC/StringFinMap.sml.code2.s]
[compiling body of functor OrderFinMap end]
[reading source file:	../Common/Flags.sml]
*** Boxities: [entry0:unb-all]
*** Boxities: [kindOfHelp:enum]
*** Boxities: [compiler_mode:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/Flags.sml.s]
[reading source file:	../Common/Man.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/Man.sml.s]
[reading source file:	../Common/IntStringFinMap.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/IntStringFinMap.sml.s]
[reading source file:	../Common/WordFinMapPT.sml]
*** Boxities: [map:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/WordFinMapPT.sml.s]
[reading source file:	../Common/Timing.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/Timing.sml.s]
[reading source file:	../Common/KIT_MONO_SET.sml]
[reading source file:	../Common/OrderSet.sml]
[reading source file:	../Common/StringSet.sml]
[compiling body of functor OrderSet (from source tools.mlb->OrderSet.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/StringSet.sml.code1.s]
[wrote X64 code file:	../Common/MLB/RI_GC/StringSet.sml.code2.s]
[compiling body of functor OrderSet end]
[reading source file:	../Common/IntSet.sml]
*** Boxities: [bal:enum]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/IntSet.sml.s]
[reading source file:	../Common/NatSet.sml]
*** Boxities: [natset:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/NatSet.sml.s]
[reading source file:	../Common/STACK.sig]
[reading source file:	../Common/Stack.sml]
[reading source file:	../Common/UNION_FIND_POLY.sml]
[reading source file:	../Common/UnionFindPoly.sml]
*** Boxities: [ElementNode:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/UnionFindPoly.sml.s]
[reading source file:	../Common/DIGRAPH.sig]
[reading source file:	../Common/IntDiGraph.sml]
[reading source file:	../Common/DiGraph.sml]
*** Boxities: [graphnode:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/DiGraph.sml.s]
[reading source file:	../Common/Heap.sml]
[reading source file:	../Common/STRID.sig]
[reading source file:	Lambda/LVARS.sig]
[reading source file:	../Manager/../Tools/MlbMake/CONFIGURATION.sig]
[reading source file:	../Common/IDENT.sig]
[reading source file:	Lambda/CON.sig]
[reading source file:	../Manager/../Tools/MlbMake/Configuration.sml]
[wrote X64 code file:	../Manager/../Tools/MlbMake/MLB/RI_GC/Configuration.sml.s]
[reading source file:	../Common/SIGID.sig]
[reading source file:	Lambda/EXCON.sig]
[reading source file:	../Manager/../Tools/MlbMake/ENVIRONMENT.sig]
[reading source file:	../Common/FUNID.sig]
[reading source file:	Regions/ADDRESS_LABELS.sml]
[reading source file:	../Manager/../Tools/MlbMake/Environment.sml]
[reading source file:	../Common/LAB.sig]
[reading source file:	../Manager/../Tools/MlbMake/MLB_PROJECT.sml]
[reading source file:	../Common/TYCON.sig]
[reading source file:	../Manager/../Tools/MlbMake/MlbProject.sml]
[reading source file:	../Common/SYNTAX_TYVAR.sig]
[reading source file:	../Manager/../Tools/MlbMake/MLB_PLUGIN.sml]
[reading source file:	../Common/REGVAR.sig]
[reading source file:	../Manager/../Tools/MlbMake/MlbMake.sml]
[reading source file:	../Common/StrId.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/StrId.sml.s]
[reading source file:	../Common/Ident.sml]
*** Boxities: [longid:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/Ident.sml.s]
[reading source file:	../Common/SigId.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/SigId.sml.s]
[reading source file:	../Common/FunId.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/FunId.sml.s]
[reading source file:	../Common/Lab.sml]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/Lab.sml.code2.s]
[wrote X64 code file:	../Common/MLB/RI_GC/Lab.sml.code3.s]
[compiling body of functor OrderFinMap end]
[wrote X64 code file:	../Common/MLB/RI_GC/Lab.sml.code1.s]
[reading source file:	../Common/TyCon.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/TyCon.sml.s]
[reading source file:	../Common/SyntaxTyVar.sml]
*** Boxities: [SyntaxTyVar:single boxed]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/SyntaxTyVar.sml.code2.s]
[wrote X64 code file:	../Common/MLB/RI_GC/SyntaxTyVar.sml.code3.s]
[compiling body of functor OrderFinMap end]
[wrote X64 code file:	../Common/MLB/RI_GC/SyntaxTyVar.sml.code1.s]
[reading source file:	../Common/RegVar.sml]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/RegVar.sml.code2.s]
[wrote X64 code file:	../Common/MLB/RI_GC/RegVar.sml.code3.s]
[compiling body of functor OrderFinMap end]
[wrote X64 code file:	../Common/MLB/RI_GC/RegVar.sml.code1.s]
[reading source file:	../Common/SCON.sig]
[reading source file:	../Common/SCon.sml]
*** Boxities: [scon:boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/SCon.sml.s]
[reading source file:	../Common/NAME.sig]
[reading source file:	../Common/Name.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/Name.sml.s]
[reading source file:	../Common/TYNAME.sig]
[reading source file:	../Common/QuasiMap.sml]
[reading source file:	../Common/QuasiSet.sml]
[reading source file:	../Common/TyName.sml]
*** Boxities: [boxity:boxed]
[compiling body of functor QuasiMap (from source special_objects.mlb->QuasiMap.sml) begin]
*** Boxities: [map0:boxed]
*** Boxities: [map:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/TyName.sml.code2.s]
[compiling body of functor QuasiMap end]
[compiling body of functor QuasiSet (from source special_objects.mlb->QuasiSet.sml) begin]
*** Boxities: [map0:boxed]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/TyName.sml.code3.s]
[compiling body of functor QuasiSet end]
[wrote X64 code file:	../Common/MLB/RI_GC/TyName.sml.code1.s]
[wrote X64 code file:	../Common/MLB/RI_GC/TyName.sml.code4.s]
[reading source file:	../Common/INFIXBASIS.sig]
[reading source file:	Lambda/Lvars.sml]
[compiling body of functor QuasiMap (from source special_objects.mlb->QuasiMap.sml) begin]
*** Boxities: [map0:boxed]
*** Boxities: [map:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/Lvars.sml.code2.s]
[compiling body of functor QuasiMap end]
*** Boxities: [lvarset:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/Lvars.sml.code1.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/Lvars.sml.s]
[reading source file:	Regions/REG_CONST.sml]
[reading source file:	../Common/InfixBasis.sml]
*** Boxities: [InfixEntry:boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/InfixBasis.sml.s]
[reading source file:	Lambda/Con.sml]
[compiling body of functor QuasiMap (from source special_objects.mlb->QuasiMap.sml) begin]
*** Boxities: [map0:boxed]
*** Boxities: [map:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/Con.sml.code2.s]
[compiling body of functor QuasiMap end]
[wrote X64 code file:	Lambda/MLB/RI_GC/Con.sml.code1.s]
[reading source file:	Regions/AT_INF.sml]
[reading source file:	../Common/../Parsing/LEX_BASICS.sml]
[reading source file:	Lambda/Excon.sml]
[compiling body of functor QuasiMap (from source special_objects.mlb->QuasiMap.sml) begin]
*** Boxities: [map0:boxed]
*** Boxities: [map:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/Excon.sml.code2.s]
[compiling body of functor QuasiMap end]
[wrote X64 code file:	Lambda/MLB/RI_GC/Excon.sml.code1.s]
[reading source file:	Regions/DROP_REGIONS.sml]
[reading source file:	../Common/../Parsing/LexBasics.sml]
*** Boxities: [pos:unb-low]
*** Boxities: [SourceReader:single boxed]
*** Boxities: [SourceText:single boxed]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/LexBasics.sml.s]
[reading source file:	Regions/AddressLabels.sml]
[wrote X64 code file:	Regions/MLB/RI_GC/AddressLabels.sml.s]
[reading source file:	Regions/EFFECT.sig]
[reading source file:	../Common/DF_INFO.sml]
[reading source file:	Lambda/COMPILER_ENV.sml]
[reading source file:	Regions/LOCALLY_LIVE_VARIABLES.sml]
[reading source file:	../Common/SOURCE_INFO.sml]
[reading source file:	Lambda/LAMBDA_EXP.sml]
[reading source file:	Regions/MUL.sig]
[reading source file:	../Common/PARSE_INFO.sml]
[reading source file:	Lambda/LambdaExp.sml]
*** Boxities: [ateff:unb-all]
*** Boxities: [eff:unb-all]
*** Boxities: [prop:enum]
*** Boxities: [constr:unb-all]
*** Boxities: [Type:unb-all]
*** Boxities: [TypeList:unb-all]
*** Boxities: [prim:unb-all]
*** Boxities: [datbinds:single unb-low,Switch:single boxed,LambdaPgm:single boxed,LambdaExp:unb-all]
[wrote X64 code file:	Lambda/MLB/RI_GC/LambdaExp.sml.s]
[reading source file:	Regions/REGION_EXP.sml]
[reading source file:	../Common/DFInfo.sml]
*** Boxities: [DFInfo:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/DFInfo.sml.s]
[reading source file:	Lambda/LAMBDA_BASICS.sml]
[reading source file:	Regions/MUL_EXP.sml]
[reading source file:	../Common/SourceInfo.sml]
*** Boxities: [SourceInfo:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/SourceInfo.sml.s]
[reading source file:	Lambda/LambdaBasics.sml]
[wrote X64 code file:	Lambda/MLB/RI_GC/LambdaBasics.sml.s]
[reading source file:	Regions/MUL_INF.sml]
[reading source file:	../Common/ParseInfo.sml]
*** Boxities: [ParseInfo:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/ParseInfo.sml.s]
[reading source file:	Regions/REGINF.sig]
[reading source file:	../Common/DEC_GRAMMAR.sml]
[reading source file:	Regions/REGION_STAT_ENV.sml]
[reading source file:	../Common/TOPDEC_GRAMMAR.sml]
[reading source file:	Regions/REG_FLOW.sml]
[reading source file:	../Common/DecGrammar.sml]
[reading source file:	Regions/RTYPE.sig]
[reading source file:	../Common/TopdecGrammar.sml]
[reading source file:	../Common/PreElabDecGrammar.sml]
[compiling body of functor DecGrammar (from source basics.mlb->DecGrammar.sml) begin]
*** Boxities: [op_opt:single boxed]
*** Boxities: [WithInfo:single boxed]
*** Boxities: [valbind:unb-all,tyrow:single boxed,typbind:single boxed,ty:unb-all,prop:unb-all,patrow:unb-all,pat:unb-all,opid:single boxed,mrule:single boxed,match:single boxed,exprow:single boxed,exp:unb-all,exbind:unb-all,eff:unb-all,dec:unb-all,datbind:single boxed,constraint:unb-all,conbind:single boxed,atpat:unb-all,atexp:unb-all,ateff:unb-all,FValBind:single boxed,FClause:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/PreElabDecGrammar.sml.code1.s]
[wrote X64 code file:	../Common/MLB/RI_GC/PreElabDecGrammar.sml.code2.s]
[compiling body of functor DecGrammar end]
[reading source file:	../Common/PreElabTopdecGrammar.sml]
[compiling body of functor TopdecGrammar (from source basics.mlb->TopdecGrammar.sml) begin]
*** Boxities: [valdesc:single boxed,typdesc:single boxed,topdec:unb-all,strexp:unb-all,strdesc:single boxed,strdec:unb-all,strbind:single boxed,spec:unb-all,sigexp:unb-all,sigdec:single boxed,sigbind:single boxed,fundec:single boxed,funbind:single boxed,exdesc:single boxed,datdesc:single boxed,condesc:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/PreElabTopdecGrammar.sml.code1.s]
[compiling body of functor TopdecGrammar end]
[reading source file:	../Common/ENVIRONMENTS.sml]
[reading source file:	../Common/STATOBJECT.sml]
[reading source file:	../Common/EfficientElab/MODULE_STATOBJECT.sml]
[reading source file:	../Common/MODULE_ENVIRONMENTS.sml]
[reading source file:	../Common/EfficientElab/StatObject.sml]
*** Boxities: [TypeDesc:unb-all,TyLink:unb-all,RecType:unb-all,RecLink:unb-all]
*** Boxities: [eq_significant:enum]
*** Boxities: [TVNames:unb-low]
*** Boxities: [free_or_bound:enum]
*** Boxities: [unify_result:unb-all]
*** Boxities: [TypeFcn:single boxed]
*** Boxities: [TypeFcn':unb-all]
*** Boxities: [realisation:unb-all]
*** Boxities: [pty:unb-all]
[wrote X64 code file:	../Common/EfficientElab/MLB/RI_GC/StatObject.sml.s]
[reading source file:	../Common/EfficientElab/Environments.sml]
*** Boxities: [range_private:unb-all]
*** Boxities: [VarEnv:single unb-low]
*** Boxities: [TyStr:single boxed]
*** Boxities: [TyEnv:single unb-low]
*** Boxities: [ExplicitTyVarEnv:single unb-low]
*** Boxities: [StrEnv:single unb-low,Env:single boxed]
*** Boxities: [Context:single boxed]
*** Boxities: [restrictor:unb-low]
*** Boxities: [range:unb-all]
[wrote X64 code file:	../Common/EfficientElab/MLB/RI_GC/Environments.sml.s]
[reading source file:	../Common/EfficientElab/ModuleStatObject.sml]
*** Boxities: [Sig:single boxed]
*** Boxities: [SigMatchError:unb-all]
*** Boxities: [FunSig:single boxed]
[wrote X64 code file:	../Common/EfficientElab/MLB/RI_GC/ModuleStatObject.sml.s]
[reading source file:	../Common/EfficientElab/ModuleEnvironments.sml]
*** Boxities: [SigEnv:single unb-low]
*** Boxities: [FunEnv:single unb-low]
*** Boxities: [Basis:single boxed]
[wrote X64 code file:	../Common/EfficientElab/MLB/RI_GC/ModuleEnvironments.sml.s]
[reading source file:	../Common/../Manager/OpacityEnv.sml]
[wrote X64 code file:	../Common/../Manager/MLB/RI_GC/OpacityEnv.sml.s]
[reading source file:	../Common/ERROR_CODE.sml]
[reading source file:	../Common/ERROR_INFO.sml]
[reading source file:	../Common/TYPE_INFO.sml]
[reading source file:	../Common/OVERLOADING_INFO.sml]
[reading source file:	../Common/ELAB_INFO.sml]
[reading source file:	../Common/TypeInfo.sml]
*** Boxities: [TypeInfo:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/TypeInfo.sml.s]
[reading source file:	../Common/OverloadingInfo.sml]
*** Boxities: [OverloadingInfo:boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/OverloadingInfo.sml.s]
[reading source file:	../Common/ErrorInfo.sml]
*** Boxities: [RepeatedId:unb-all]
*** Boxities: [ErrorInfo:boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/ErrorInfo.sml.s]
[reading source file:	../Common/ElabInfo.sml]
*** Boxities: [ElabInfo:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/ElabInfo.sml.s]
[reading source file:	../Common/ALL_INFO.sml]
[reading source file:	../Common/AllInfo.sml]
[reading source file:	../Common/../Parsing/INFIX_STACK.sml]
[reading source file:	../Common/../Parsing/InfixStack.sml]
[reading source file:	../Common/../Parsing/GRAMMAR_UTILS.sml]
[reading source file:	../Common/../Parsing/INFIXING.sig]
[reading source file:	../Common/../Parsing/GrammarUtils.sml]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/GrammarUtils.sml.s]
[reading source file:	../Common/../Parsing/Infixing.sml]
[compiling body of functor InfixStack (from source basics.mlb->InfixStack.sml) begin]
*** Boxities: [StackEntry:unb-all]
*** Boxities: [OutputEntry:boxed]
*** Boxities: [LastObj:enum]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Infixing.sml.code2.s]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Infixing.sml.code4.s]
[compiling body of functor InfixStack end]
[compiling body of functor InfixStack (from source basics.mlb->InfixStack.sml) begin]
*** Boxities: [StackEntry:unb-all]
*** Boxities: [OutputEntry:boxed]
*** Boxities: [LastObj:enum]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Infixing.sml.code5.s]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Infixing.sml.code7.s]
[compiling body of functor InfixStack end]
*** Boxities: [Category:unb-low]
*** Boxities: [result:boxed]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Infixing.sml.code1.s]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Infixing.sml.code8.s]
[reading source file:	../Common/../Parsing/PARSE.sig]
[reading source file:	../Common/../Parsing/MyBase.sml]
[reading source file:	../Common/../Parsing/Topdec.grm.sig]
[reading source file:	../Common/../Parsing/Topdec.grm.sml]
[reading source file:	../Common/../Parsing/LEX_UTILS.sml]
[reading source file:	../Common/../Parsing/LexUtils.sml]
[reading source file:	../Common/../Parsing/Topdec.lex.sml]
[reading source file:	../Common/../Parsing/Parse.sml]
[compiling body of functor Stream (from source basics.mlb->MyBase.sml) begin]
*** Boxities: [str:unb-all]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code2.s]
[compiling body of functor Stream end]
[compiling body of functor LrTable (from source basics.mlb->MyBase.sml) begin]
*** Boxities: [pairlist:unb-low]
*** Boxities: [term:single unb-all]
*** Boxities: [nonterm:single unb-all]
*** Boxities: [state:single unb-all]
*** Boxities: [action:boxed]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code4.s]
[compiling body of functor LrTable end]
[compiling body of functor ParserGen (from source basics.mlb->MyBase.sml) begin]
*** Boxities: [token:single boxed]
*** Boxities: [oper:enum]
*** Boxities: [change:single boxed]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code7.s]
[compiling body of functor ParserGen end]
[compiling body of functor TopdecLrVals (from source basics.mlb->Topdec.grm.sml) begin]
*** Boxities: [svalue:unb-all]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code8.s]
[compiling body of functor TopdecLrVals end]
[compiling body of functor LexUtils (from source basics.mlb->LexUtils.sml) begin]
*** Boxities: [LexArgument:single boxed]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code9.s]
[compiling body of functor LexUtils end]
[compiling body of functor TopdecLex (from source basics.mlb->Topdec.lex.sml) begin]
*** Boxities: [yyfinstate:single unb-all]
*** Boxities: [yystartstate:single unb-all]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code13.s]
[compiling body of functor TopdecLex end]
[compiling body of functor JoinWithArg (from source basics.mlb->MyBase.sml) begin]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code16.s]
[compiling body of functor JoinWithArg end]
*** Boxities: [State:single boxed]
*** Boxities: [PSResult:boxed]
*** Boxities: [Result:boxed]
[wrote X64 code file:	../Common/../Parsing/MLB/RI_GC/Parse.sml.code17.s]
[reading source file:	../Common/PostElabGrammar.sml]
[compiling body of functor DecGrammar (from source basics.mlb->DecGrammar.sml) begin]
*** Boxities: [op_opt:single boxed]
*** Boxities: [WithInfo:single boxed]
*** Boxities: [valbind:unb-all,tyrow:single boxed,typbind:single boxed,ty:unb-all,prop:unb-all,patrow:unb-all,pat:unb-all,opid:single boxed,mrule:single boxed,match:single boxed,exprow:single boxed,exp:unb-all,exbind:unb-all,eff:unb-all,dec:unb-all,datbind:single boxed,constraint:unb-all,conbind:single boxed,atpat:unb-all,atexp:unb-all,ateff:unb-all,FValBind:single boxed,FClause:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/PostElabGrammar.sml.code1.s]
[wrote X64 code file:	../Common/MLB/RI_GC/PostElabGrammar.sml.code2.s]
[compiling body of functor DecGrammar end]
[compiling body of functor TopdecGrammar (from source basics.mlb->TopdecGrammar.sml) begin]
*** Boxities: [valdesc:single boxed,typdesc:single boxed,topdec:unb-all,strexp:unb-all,strdesc:single boxed,strdec:unb-all,strbind:single boxed,spec:unb-all,sigexp:unb-all,sigdec:single boxed,sigbind:single boxed,fundec:single boxed,funbind:single boxed,exdesc:single boxed,datdesc:single boxed,condesc:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/PostElabGrammar.sml.code3.s]
[compiling body of functor TopdecGrammar end]
[reading source file:	../Common/ELABDEC.sig]
[reading source file:	../Common/ELABTOPDEC.sml]
[reading source file:	../Common/ElabDec.sml]
*** Boxities: [flexresResult:enum]
[wrote X64 code file:	../Common/MLB/RI_GC/ElabDec.sml.s]
[reading source file:	../Common/EfficientElab/ElabTopdec.sml]
[wrote X64 code file:	../Common/EfficientElab/MLB/RI_GC/ElabTopdec.sml.s]
[reading source file:	../Common/ERROR_TRAVERSE.sml]
[reading source file:	../Common/TOP_LEVEL_REPORT.sml]
[reading source file:	../Common/ErrorTraverse.sml]
*** Boxities: [result:unb-low]
[wrote X64 code file:	../Common/MLB/RI_GC/ErrorTraverse.sml.s]
[reading source file:	../Common/TopLevelReport.sml]
[wrote X64 code file:	../Common/MLB/RI_GC/TopLevelReport.sml.s]
[reading source file:	../Common/../Manager/PARSE_ELAB.sml]
[reading source file:	../Common/../Manager/ParseElab.sml]
*** Boxities: [Result:unb-all]
*** Boxities: [src:unb-all]
[wrote X64 code file:	../Common/../Manager/MLB/RI_GC/ParseElab.sml.s]
[reading source file:	../Common/../Manager/OPACITY_ELIM.sml]
[reading source file:	../Common/../Manager/OpacityElim.sml]
[wrote X64 code file:	../Common/../Manager/MLB/RI_GC/OpacityElim.sml.s]
[reading source file:	../Common/../Manager/FREE_IDS.sml]
[reading source file:	../Common/../Manager/FreeIds.sml]
[wrote X64 code file:	../Common/../Manager/MLB/RI_GC/FreeIds.sml.s]
[reading source file:	Lambda/CompilerEnv.sml]
*** Boxities: [result:unb-all]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompilerEnv.sml.code2.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompilerEnv.sml.code3.s]
[compiling body of functor OrderFinMap end]
*** Boxities: [TyEnv:single unb-low,StrEnv:single unb-low,CEnv:single boxed]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompilerEnv.sml.code1.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompilerEnv.sml.code4.s]
[reading source file:	../Manager/MANAGER_OBJECTS0.sml]
[reading source file:	Lambda/OptLambda.sml]
[compiling body of functor DiGraphScc (from source tools.mlb->IntDiGraph.sml) begin]
[compiling body of functor DiGraphAll (from source tools.mlb->IntDiGraph.sml) begin]
*** Boxities: [graphnode:single boxed]
[wrote X64 code file:	Lambda/MLB/RI_GC/OptLambda.sml.code3.s]
[compiling body of functor DiGraphAll end]
*** Boxities: [SCCedgeInfo:enum]
[compiling body of functor DiGraphAll (from source tools.mlb->IntDiGraph.sml) begin]
*** Boxities: [graphnode:single boxed]
[wrote X64 code file:	Lambda/MLB/RI_GC/OptLambda.sml.code5.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/OptLambda.sml.code6.s]
[compiling body of functor DiGraphAll end]
[wrote X64 code file:	Lambda/MLB/RI_GC/OptLambda.sml.code1.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/OptLambda.sml.code4.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/OptLambda.sml.code7.s]
[compiling body of functor DiGraphScc end]
*** Boxities: [cv:unb-all]
*** Boxities: [cmp:enum]
*** Boxities: [let_env_res:enum]
*** Boxities: [fix_boxity:unb-all]
*** Boxities: [inveta_res:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/OptLambda.sml.code8.s]
[reading source file:	Regions/SPREAD_DATATYPE.sml]
[reading source file:	../Manager/MANAGER_OBJECTS.sml]
[reading source file:	Lambda/LambdaStatSem.sml]
[wrote X64 code file:	Lambda/MLB/RI_GC/LambdaStatSem.sml.s]
[reading source file:	Regions/SPREAD_EXPRESSION.sml]
[reading source file:	../Manager/MODCODE_MINI.sml]
[reading source file:	Lambda/EliminateEq.sml]
*** Boxities: [result:unb-all]
[wrote X64 code file:	Lambda/MLB/RI_GC/EliminateEq.sml.s]
[reading source file:	Regions/PHYS_SIZE_INF.sml]
[reading source file:	../Manager/INT_MODULES.sml]
[reading source file:	Lambda/CompileDec.sml]
*** Boxities: [lookup_info:unb-all]
*** Boxities: [con:unb-all]
*** Boxities: [cmp:enum]
*** Boxities: [path:unb-low]
[compiling body of functor OrderSet (from source tools.mlb->OrderSet.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code3.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code4.s]
[compiling body of functor OrderSet end]
*** Boxities: [termd:unb-all]
*** Boxities: [matchresult:enum]
*** Boxities: [kind:unb-all]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code6.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code7.s]
[compiling body of functor OrderFinMap end]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code1.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code2.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code5.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code8.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code9.s]
[wrote X64 code file:	Lambda/MLB/RI_GC/CompileDec.sml.code10.s]
[reading source file:	Regions/REGION_FLOW_GRAPH_PROFILING.sml]
[reading source file:	../Manager/MANAGER.sig]
[reading source file:	CompBasisToLamb.sml]
[wrote X64 code file:	MLB/RI_GC/CompBasisToLamb.sml.s]
[reading source file:	Regions/RegConst.sml]
[wrote X64 code file:	Regions/MLB/RI_GC/RegConst.sml.s]
[reading source file:	../Manager/../Compiler/COMPILE_BASIS.sml]
[reading source file:	COMPILE_TO_LAMB.sml]
[reading source file:	Regions/Effect.sml]
*** Boxities: [runType:enum]
*** Boxities: [einfo:unb-all]
*** Boxities: [delta_phi:unb-all]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code2.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code3.s]
[compiling body of functor OrderFinMap end]
[compiling body of functor Heap (from source tools.mlb->Heap.sml) begin]
*** Boxities: [heap:unb-low]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code8.s]
[compiling body of functor Heap end]
*** Boxities: [cerr:unb-low]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code1.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code4.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code5.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code9.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Effect.sml.code10.s]
[reading source file:	../Manager/EXECUTION.sml]
[reading source file:	CompileToLamb.sml]
*** Boxities: [res:unb-all]
*** Boxities: [cval:boxed]
[wrote X64 code file:	MLB/RI_GC/CompileToLamb.sml.s]
[reading source file:	Regions/RType.sml]
*** Boxities: [Type:unb-all]
*** Boxities: [sigma:single boxed]
[wrote X64 code file:	Regions/MLB/RI_GC/RType.sml.s]
[reading source file:	../Manager/ManagerObjects0.sml]
[reading source file:	Regions/RegionExp.sml]
*** Boxities: [constructorKind:enum]
*** Boxities: [datbinds:single unb-low]
*** Boxities: [metaType:unb-all]
*** Boxities: [trip:single boxed,Switch:single boxed,LambdaPgm:single boxed,LambdaExp:unb-all]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionExp.sml.s]
[reading source file:	../Manager/ManagerObjects.sml]
[reading source file:	Regions/RegionStatEnv.sml]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionStatEnv.sml.s]
[reading source file:	../Manager/IntModules.sml]
[reading source file:	Regions/EffVarEnv.sml]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	Regions/MLB/RI_GC/EffVarEnv.sml.code1.s]
[wrote X64 code file:	Regions/MLB/RI_GC/EffVarEnv.sml.code2.s]
[compiling body of functor OrderFinMap end]
[reading source file:	../Manager/Scriptlet.sml]
[reading source file:	../Common/QUASI_ENV.sml]
[reading source file:	../Manager/Manager.sml]
[reading source file:	../Common/QuasiEnv.sml]
[reading source file:	../Manager/Repl.sml]
[reading source file:	Regions/Mul.sml]
[compiling body of functor QuasiEnv (from source regions.mlb->QuasiEnv.sml) begin]
[wrote X64 code file:	Regions/MLB/RI_GC/Mul.sml.code2.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Mul.sml.code4.s]
[compiling body of functor QuasiEnv end]
*** Boxities: [mul:boxed]
*** Boxities: [shared:unb-all]
[compiling body of functor Heap (from source tools.mlb->Heap.sml) begin]
*** Boxities: [heap:unb-low]
[wrote X64 code file:	Regions/MLB/RI_GC/Mul.sml.code9.s]
[compiling body of functor Heap end]
[wrote X64 code file:	Regions/MLB/RI_GC/Mul.sml.code5.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Mul.sml.code6.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Mul.sml.code10.s]
[wrote X64 code file:	Regions/MLB/RI_GC/Mul.sml.code11.s]
[reading source file:	../Version.sml]
[wrote X64 code file:	../MLB/RI_GC/Version.sml.s]
[reading source file:	Regions/MulExp.sml]
*** Boxities: [callKind:enum]
*** Boxities: [saveRestore:unb-low]
*** Boxities: [trip:single boxed,Switch:single boxed,LambdaPgm:single boxed,LambdaExp:unb-all]
*** Boxities: [conset:unb-all]
*** Boxities: [continuation:enum]
[wrote X64 code file:	Regions/MLB/RI_GC/MulExp.sml.s]
[reading source file:	../Common/KitCompiler.sml]
[reading source file:	Regions/MulInf.sml]
*** Boxities: [app_cont:enum]
[wrote X64 code file:	Regions/MLB/RI_GC/MulInf.sml.s]
[reading source file:	../Common/KitMain.sml]
[reading source file:	Regions/LocallyLiveVariables.sml]
[wrote X64 code file:	Regions/MLB/RI_GC/LocallyLiveVariables.sml.s]
[reading source file:	Regions/RegFlow.sml]
*** Boxities: [graph:single boxed]
*** Boxities: [regmap:single boxed]
[wrote X64 code file:	Regions/MLB/RI_GC/RegFlow.sml.s]
[reading source file:	Regions/RegInf.sml]
[wrote X64 code file:	Regions/MLB/RI_GC/RegInf.sml.s]
[reading source file:	Regions/SpreadDataType.sml]
*** Boxities: [eff_arity:single unb-all]
[wrote X64 code file:	Regions/MLB/RI_GC/SpreadDataType.sml.s]
[reading source file:	Regions/SpreadExpression.sml]
*** Boxities: [cont:enum]
[wrote X64 code file:	Regions/MLB/RI_GC/SpreadExpression.sml.s]
[reading source file:	Regions/AtInf.sml]
*** Boxities: [at:boxed]
*** Boxities: [rho_desc:enum]
*** Boxities: [regvar_env:single unb-low]
*** Boxities: [lvar_env:single unb-all]
*** Boxities: [excon_env:single unb-low]
*** Boxities: [conflict:unb-all]
[wrote X64 code file:	Regions/MLB/RI_GC/AtInf.sml.s]
[reading source file:	Regions/DropRegions.sml]
*** Boxities: [env_res:unb-all]
*** Boxities: [regenv_res:enum]
[wrote X64 code file:	Regions/MLB/RI_GC/DropRegions.sml.s]
[reading source file:	Regions/PhysSizeInf.sml]
*** Boxities: [phsize:boxed]
*** Boxities: [range_env:unb-all]
[wrote X64 code file:	Regions/MLB/RI_GC/PhysSizeInf.sml.s]
[reading source file:	Regions/RegionFlowGraphProfiling.sml]
[compiling body of functor DiGraphScc (from source tools.mlb->IntDiGraph.sml) begin]
[compiling body of functor DiGraphAll (from source tools.mlb->IntDiGraph.sml) begin]
*** Boxities: [graphnode:single boxed]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code4.s]
[compiling body of functor DiGraphAll end]
*** Boxities: [SCCedgeInfo:enum]
[compiling body of functor DiGraphAll (from source tools.mlb->IntDiGraph.sml) begin]
*** Boxities: [graphnode:single boxed]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code6.s]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code7.s]
[compiling body of functor DiGraphAll end]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code2.s]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code5.s]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code8.s]
[compiling body of functor DiGraphScc end]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code1.s]
[wrote X64 code file:	Regions/MLB/RI_GC/RegionFlowGraphProfiling.sml.code9.s]
[reading source file:	CompBasis.sml]
[wrote X64 code file:	MLB/RI_GC/CompBasis.sml.s]
[reading source file:	Compile.sml]
*** Boxities: [res:unb-all]
[wrote X64 code file:	MLB/RI_GC/Compile.sml.s]
[reading source file:	Backend/CLOS_CONV_ENV.sml]
[reading source file:	Backend/CLOS_EXP.sml]
[reading source file:	Backend/CALL_CONV.sml]
[reading source file:	Backend/BACKEND_INFO.sml]
[reading source file:	Backend/REGISTER_INFO.sml]
[reading source file:	Backend/JUMP_TABLES.sml]
[reading source file:	Backend/PrimName.sml]
*** Boxities: [prim:enum]
[wrote X64 code file:	Backend/MLB/RI_GC/PrimName.sml.s]
[reading source file:	Backend/BackendInfo.sml]
[reading source file:	Backend/ClosConvEnv.sml]
[reading source file:	Backend/CallConv.sml]
[reading source file:	Backend/ClosExp.sml]
[reading source file:	Backend/JumpTables.sml]
[reading source file:	CompileBasis.sml]
[reading source file:	Backend/LINE_STMT.sml]
[reading source file:	Backend/REG_ALLOC.sml]
[reading source file:	Backend/FETCH_AND_FLUSH.sml]
[reading source file:	Backend/CALC_OFFSET.sml]
[reading source file:	Backend/SUBST_AND_SIMPLIFY.sml]
[reading source file:	Backend/LineStmt.sml]
[reading source file:	Backend/RegAlloc.sml]
[reading source file:	Backend/FetchAndFlush.sml]
[reading source file:	Backend/CalcOffset.sml]
[reading source file:	Backend/SubstAndSimplify.sml]
[reading source file:	Backend/NativeCompile.sml]
[reading source file:	Backend/CODE_GEN.sml]
[reading source file:	Backend/X64/INSTS_X64.sml]
[reading source file:	Backend/X64/InstsX64.sml]
*** Boxities: [reg:enum]
*** Boxities: [lab:unb-all]
*** Boxities: [ea:boxed]
*** Boxities: [ty:enum]
*** Boxities: [inst:boxed]
*** Boxities: [top_decl:unb-all]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/InstsX64.sml.s]
[reading source file:	Backend/X64/CodeGenUtilX64.sml]
[reading source file:	Backend/X64/CodeGenX64.sml]
[reading source file:	Backend/X64/ExecutionX64.sml]
[compiling body of functor BackendInfo (from source regions.mlb->BackendInfo.sml) begin]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code2.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code4.s]
[compiling body of functor BackendInfo end]
[compiling body of functor NativeCompile (from source native64.mlb->NativeCompile.sml) begin]
[compiling body of functor ClosConvEnv (from source regions.mlb->ClosConvEnv.sml) begin]
*** Boxities: [con_kind:boxed]
*** Boxities: [arity_excon:enum]
*** Boxities: [access_type:unb-all]
*** Boxities: [rho_kind:enum]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code8.s]
[compiling body of functor ClosConvEnv end]
[compiling body of functor CallConv (from source regions.mlb->CallConv.sml) begin]
*** Boxities: [CC_STY:unb-all]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code9.s]
[compiling body of functor CallConv end]
[compiling body of functor ClosExp (from source regions.mlb->ClosExp.sml) begin]
*** Boxities: [foreign_type:enum]
*** Boxities: [con_kind:boxed]
*** Boxities: [sma:unb-all,Switch:single boxed,ClosExp:unb-all]
*** Boxities: [TopDecl:unb-all]
*** Boxities: [fenv:unb-all]
[compiling body of functor OrderSet (from source tools.mlb->OrderSet.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code14.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code15.s]
[compiling body of functor OrderSet end]
[compiling body of functor OrderSet (from source tools.mlb->OrderSet.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code16.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code17.s]
[compiling body of functor OrderSet end]
[compiling body of functor OrderSet (from source tools.mlb->OrderSet.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [Set:unb-low]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code18.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code19.s]
[compiling body of functor OrderSet end]
*** Boxities: [rtn_type:unb-low]
*** Boxities: [select_exp:unb-all]
[compiling body of functor OrderFinMap (from source tools.mlb->OrderFinMap.sml) begin]
*** Boxities: [bal:enum]
*** Boxities: [map:unb-low]
*** Boxities: [tree:unb-low]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code23.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code24.s]
[compiling body of functor OrderFinMap end]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code12.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code13.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code20.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code21.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code22.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code25.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code26.s]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code27.s]
[compiling body of functor ClosExp end]
[compiling body of functor LineStmt (from source native64.mlb->LineStmt.sml) begin]
*** Boxities: [con_kind:boxed]
*** Boxities: [Atom:unb-all]
*** Boxities: [StoreType:unb-all]
*** Boxities: [sma:unb-all]
*** Boxities: [Switch:single boxed,SimpleExp:unb-all,LineStmt:unb-all]
*** Boxities: [TopDecl:unb-all]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code30.s]
[compiling body of functor LineStmt end]
[compiling body of functor RegAlloc (from source native64.mlb->RegAlloc.sml) begin]
*** Boxities: [StoreType:unb-all]
*** Boxities: [kind:enum]
*** Boxities: [worklist_enum:enum]
*** Boxities: [live_range_status:enum]
*** Boxities: [movelist_enum:enum]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code33.s]
[compiling body of functor RegAlloc end]
[compiling body of functor FetchAndFlush (from source native64.mlb->FetchAndFlush.sml) begin]
*** Boxities: [StoreType:unb-all]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code36.s]
[compiling body of functor FetchAndFlush end]
[compiling body of functor CalcOffset (from source native64.mlb->CalcOffset.sml) begin]
*** Boxities: [StoreType:unb-all]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code39.s]
[compiling body of functor CalcOffset end]
[compiling body of functor SubstAndSimplify (from source native64.mlb->SubstAndSimplify.sml) begin]
*** Boxities: [Aty:boxed]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code42.s]
[compiling body of functor SubstAndSimplify end]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code43.s]
[compiling body of functor NativeCompile end]
[compiling body of functor CompileBasis (from source regions.mlb->CompileBasis.sml) begin]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code47.s]
[compiling body of functor CompileBasis end]
[compiling body of functor JumpTables (from source regions.mlb->JumpTables.sml) begin]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code48.s]
[compiling body of functor JumpTables end]
[compiling body of functor CodeGenX64 (from source native64.mlb->CodeGenX64.sml) begin]
[compiling body of functor CodeGenUtilX64 (from source native64.mlb->CodeGenUtilX64.sml) begin]
*** Boxities: [Offset:boxed]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code53.s]
[compiling body of functor CodeGenUtilX64 end]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code54.s]
[compiling body of functor CodeGenX64 end]
*** Boxities: [res:unb-all]
*** Boxities: [conkind:enum]
[wrote X64 code file:	Backend/X64/MLB/RI_GC/ExecutionX64.sml.code55.s]
[reading source file:	../Common/KitX64.sml]
[compiling body of functor KitCompiler (from source compiler.mlb->KitCompiler.sml) begin]
[compiling body of functor ManagerObjects (from source manager.mlb->ManagerObjects.sml) begin]
[compiling body of functor ManagerObjects0 (from source manager.mlb->ManagerObjects0.sml) begin]
*** Boxities: [IntSigEnv:single unb-low]
*** Boxities: [IntFunEnv:single unb-low,IntBasis:single boxed]
*** Boxities: [Basis:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code6.s]
[compiling body of functor ManagerObjects0 end]
[compiling body of functor Environment (from source environment.mlb->Environment.sml) begin]
*** Boxities: [State:boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code9.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code11.s]
[compiling body of functor Environment end]
*** Boxities: [modcode:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code2.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code12.s]
[compiling body of functor ManagerObjects end]
[compiling body of functor IntModules (from source manager.mlb->IntModules.sml) begin]
*** Boxities: [IntBasisTree:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code14.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code16.s]
[compiling body of functor IntModules end]
[compiling body of functor Manager (from source manager.mlb->Manager.sml) begin]
*** Boxities: [when_to_pickle:enum]
[compiling body of functor MlbProject (from source mlbmake.mlb->MlbProject.sml) begin]
*** Boxities: [bexp:unb-all,bdec:unb-all]
*** Boxities: [D:single boxed]
*** Boxities: [Deps:single boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code20.s]
[compiling body of functor MlbProject end]
[compiling body of functor MlbMake (from source mlbmake.mlb->MlbMake.sml) begin]
*** Boxities: [File:boxed]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code22.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code24.s]
[compiling body of functor MlbMake end]
*** Boxities: [source:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code19.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code21.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code25.s]
[compiling body of functor Manager end]
[compiling body of functor Repl (from source manager.mlb->Repl.sml) begin]
*** Boxities: [loadrun_msg:enum]
*** Boxities: [dep:unb-all]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code28.s]
[compiling body of functor Repl end]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code1.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code13.s]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code29.s]
[compiling body of functor KitCompiler end]
[compiling body of functor KitMain (from source compiler.mlb->KitMain.sml) begin]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code31.s]
[compiling body of functor KitMain end]
[wrote X64 code file:	../Common/MLB/RI_GC/KitX64.sml.code30.s]
[wrote X64 code file:	MLB/RI_GC/base-link_objects.s]
[wrote executable file:	run]
      365.96 real       333.54 user        27.54 sys
           570978304  maximum resident set size
                   0  average shared memory size
                   0  average unshared data size
                   0  average unshared stack size
            14605896  page reclaims
                6475  page faults
                   0  swaps
                   0  block input operations
                   0  block output operations
                   0  messages sent
                   0  messages received
                   0  signals received
                1529  voluntary context switches
               80853  involuntary context switches
          8747701853  instructions retired
          5190048426  cycles elapsed
            12681216  peak memory footprint
