** COMPILING MLTON WITH MLKIT **
** MLKIT_ROOT: /Users/mael/gits/bitstealing/boot/bootstrap0/mlkit-v3
** MLKIT_FLAGS: -heap_to_live_ratio 5 --report_boxities
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/IEEE-real.sig]
[reading source file:	../lib/stubs/mlkit/mlton/../../common/mlton/process-via-fork-exec.sml]
[wrote X64 code file:	../lib/stubs/mlkit/mlton/../../common/mlton/MLB/RI_GC/process-via-fork-exec.sml.s]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/IEEE-real-dummy.sml]
*** Boxities: [real_order:enum]
*** Boxities: [float_class:enum]
*** Boxities: [rounding_mode:enum]
[wrote X64 code file:	../lib/stubs/mlkit/basis/../../common/basis/MLB/RI_GC/IEEE-real-dummy.sml.s]
[reading source file:	../lib/stubs/mlkit/mlton/mlton.sml]
[wrote X64 code file:	../lib/stubs/mlkit/mlton/MLB/RI_GC/mlton.sml.s]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/real.sig]
[reading source file:	../lib/stubs/mlkit/basis/real.sml]
[wrote X64 code file:	../lib/stubs/mlkit/basis/MLB/RI_GC/real.sml.s]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/real32-via-real.sml]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/real64-via-real.sml]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/pack-real32-dummy.sml]
[wrote X64 code file:	../lib/stubs/mlkit/basis/../../common/basis/MLB/RI_GC/pack-real32-dummy.sml.s]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/pack-real64-dummy.sml]
[wrote X64 code file:	../lib/stubs/mlkit/basis/../../common/basis/MLB/RI_GC/pack-real64-dummy.sml.s]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/pack-word64-dummy.sml]
[wrote X64 code file:	../lib/stubs/mlkit/basis/../../common/basis/MLB/RI_GC/pack-word64-dummy.sml.s]
[reading source file:	../lib/stubs/mlkit/basis/timer.sml]
[wrote X64 code file:	../lib/stubs/mlkit/basis/MLB/RI_GC/timer.sml.s]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/unsafe.sig]
[reading source file:	../lib/stubs/mlkit/basis/../../common/basis/unsafe.sml]
[reading source file:	../lib/mlyacc-lib/base.sig]
[reading source file:	../lib/stubs/mlton-stubs/pre-mlton.sml]
[wrote X64 code file:	../lib/stubs/mlton-stubs/MLB/RI_GC/pre-mlton.sml.s]
[reading source file:	../lib/mlyacc-lib/join.sml]
[reading source file:	../lib/stubs/mlton-stubs/io.sig]
[reading source file:	../lib/mlyacc-lib/lrtable.sml]
*** Boxities: [pairlist:unb-low]
*** Boxities: [term:single unb-all]
*** Boxities: [nonterm:single unb-all]
*** Boxities: [state:single unb-all]
*** Boxities: [action:boxed]
[wrote X64 code file:	../lib/mlyacc-lib/MLB/RI_GC/lrtable.sml.s]
[reading source file:	../lib/stubs/mlton-stubs/array.sig]
[reading source file:	../lib/mlyacc-lib/stream.sml]
*** Boxities: [str:unb-all]
[wrote X64 code file:	../lib/mlyacc-lib/MLB/RI_GC/stream.sml.s]
[reading source file:	../lib/stubs/mlton-stubs/exn.sig]
[reading source file:	../lib/mlyacc-lib/parser2.sml]
*** Boxities: [token:single boxed]
*** Boxities: [change:single boxed]
[wrote X64 code file:	../lib/mlyacc-lib/MLB/RI_GC/parser2.sml.s]
[reading source file:	../lib/stubs/mlton-stubs/gc.sig]
[reading source file:	../lib/stubs/mlton-stubs/process.sig]
[reading source file:	../lib/stubs/mlton-stubs/profile.sig]
[reading source file:	../lib/stubs/mlton-stubs/rusage.sig]
[reading source file:	../lib/stubs/mlton-stubs/text-io.sig]
[reading source file:	../lib/stubs/mlton-stubs/vector.sig]
[reading source file:	../lib/stubs/mlton-stubs/platform.sig]
[reading source file:	../lib/stubs/mlton-stubs/platform.sml]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
[wrote X64 code file:	../lib/stubs/mlton-stubs/MLB/RI_GC/platform.sml.s]
[reading source file:	../lib/stubs/mlton-stubs/random.sig]
[reading source file:	../lib/stubs/mlton-stubs/random.sml]
[wrote X64 code file:	../lib/stubs/mlton-stubs/MLB/RI_GC/random.sml.s]
[reading source file:	../lib/stubs/mlton-stubs/mlton-root.sig]
[reading source file:	../lib/stubs/mlton-stubs/mlton.sig]
[reading source file:	../lib/stubs/mlton-stubs/mlton.sml]
[compiling body of functor MkIO (from source mlton-mlkit-mael.mlb->mlton.sml) begin]
[wrote X64 code file:	../lib/stubs/mlton-stubs/MLB/RI_GC/mlton.sml.code2.s]
[compiling body of functor MkIO end]
[wrote X64 code file:	../lib/stubs/mlton-stubs/MLB/RI_GC/mlton.sml.code1.s]
[wrote X64 code file:	../lib/stubs/mlton-stubs/MLB/RI_GC/mlton.sml.code3.s]
[reading source file:	../lib/mlton/pervasive/pervasive.sml]
[wrote X64 code file:	../lib/mlton/pervasive/MLB/RI_GC/pervasive.sml.s]
[reading source file:	../lib/mlton/basic/error.sig]
[reading source file:	../lib/mlton/basic/error.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/error.sml.s]
[reading source file:	../lib/mlton/basic/assert.sig]
[reading source file:	../lib/mlton/basic/assert.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/assert.sml.s]
[reading source file:	../lib/mlton/basic/escape.sig]
[reading source file:	../lib/mlton/basic/escape.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/escape.sml.s]
[reading source file:	../lib/mlton/basic/fixed-point.sig]
[reading source file:	../lib/mlton/basic/fixed-point.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/fixed-point.sml.s]
[reading source file:	../lib/mlton/basic/exn0.sml]
*** Boxities: [z:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/exn0.sml.s]
[reading source file:	../lib/mlton/basic/outstream0.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/outstream0.sml.s]
[reading source file:	../lib/mlton/basic/relation0.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/relation0.sml.s]
[reading source file:	../lib/mlton/basic/char0.sig]
[reading source file:	../lib/mlton/basic/char0.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/char0.sml.s]
[reading source file:	../lib/mlton/basic/string0.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/string0.sml.s]
[reading source file:	../lib/mlton/basic/layout.sig]
[reading source file:	../lib/mlton/basic/layout.sml]
*** Boxities: [tree:unb-all,t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/layout.sml.s]
[reading source file:	../lib/mlton/basic/function.sig]
[reading source file:	../lib/mlton/basic/function.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/function.sml.s]
[reading source file:	../lib/mlton/basic/t.sig]
[reading source file:	../lib/mlton/basic/relation.sig]
[reading source file:	../lib/mlton/basic/relation.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/relation.sml.s]
[reading source file:	../lib/mlton/basic/order0.sig]
[reading source file:	../lib/mlton/basic/order.sig]
[reading source file:	../lib/mlton/basic/unit.sig]
[reading source file:	../lib/mlton/basic/unit.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/unit.sml.s]
[reading source file:	../lib/mlton/basic/bool.sig]
[reading source file:	../lib/mlton/basic/bool.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/bool.sml.s]
[reading source file:	../lib/mlton/basic/exn.sig]
[reading source file:	../lib/mlton/basic/exn.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/exn.sml.s]
[reading source file:	../lib/mlton/basic/ref.sig]
[reading source file:	../lib/mlton/basic/ref.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/ref.sml.s]
[reading source file:	../lib/mlton/basic/option.sig]
[reading source file:	../lib/mlton/basic/option.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/option.sml.s]
[reading source file:	../lib/mlton/basic/result.sig]
[reading source file:	../lib/mlton/basic/result.sml]
*** Boxities: [t:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/result.sml.s]
[reading source file:	../lib/mlton/basic/promise.sig]
[reading source file:	../lib/mlton/basic/promise.sml]
*** Boxities: [t:boxed,state:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/promise.sml.s]
[reading source file:	../lib/mlton/basic/clearable-promise.sig]
[reading source file:	../lib/mlton/basic/clearable-promise.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/clearable-promise.sml.s]
[reading source file:	../lib/mlton/basic/list.sig]
[reading source file:	../lib/mlton/basic/fold.sig]
[reading source file:	../lib/mlton/basic/fold.fun]
[reading source file:	../lib/mlton/basic/list.sml]
[compiling body of functor Fold (from source mlton-mlkit-mael.mlb->fold.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/list.sml.code3.s]
[compiling body of functor Fold end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/list.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/list.sml.code4.s]
[reading source file:	../lib/mlton/basic/control.sig]
[reading source file:	../lib/mlton/basic/control.fun]
[reading source file:	../lib/mlton/basic/max-pow-2-that-divides.fun]
[reading source file:	../lib/mlton/basic/fix-word.fun]
[reading source file:	../lib/mlton/basic/word.sig]
[reading source file:	../lib/mlton/basic/word8.sml]
[compiling body of functor FixWord (from source mlton-mlkit-mael.mlb->fix-word.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/word8.sml.code2.s]
[compiling body of functor FixWord end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/word8.sml.code3.s]
[reading source file:	../lib/mlton/basic/word.sml]
[compiling body of functor FixWord (from source mlton-mlkit-mael.mlb->fix-word.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/word.sml.code2.s]
[compiling body of functor FixWord end]
[compiling body of functor MaxPow2ThatDivides (from source mlton-mlkit-mael.mlb->max-pow-2-that-divides.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/word.sml.code4.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/word.sml.code6.s]
[compiling body of functor MaxPow2ThatDivides end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/word.sml.code3.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/word.sml.code7.s]
[reading source file:	../lib/mlton/basic/string1.sml]
[compiling body of functor Fold (from source mlton-mlkit-mael.mlb->fold.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/string1.sml.code2.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/string1.sml.code3.s]
[compiling body of functor Fold end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/string1.sml.code4.s]
[reading source file:	../lib/mlton/basic/substring.sig]
[reading source file:	../lib/mlton/basic/substring.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/substring.sml.s]
[reading source file:	../lib/mlton/basic/outstream.sig]
[reading source file:	../lib/mlton/basic/outstream.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/outstream.sml.s]
[reading source file:	../lib/mlton/basic/time.sig]
[reading source file:	../lib/mlton/basic/time.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/time.sml.s]
[reading source file:	../lib/mlton/basic/date.sig]
[reading source file:	../lib/mlton/basic/date.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/date.sml.s]
[reading source file:	../lib/mlton/basic/instream0.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/instream0.sml.s]
[reading source file:	../lib/mlton/basic/computation.sig]
[reading source file:	../lib/mlton/basic/intermediate-computation.sig]
[reading source file:	../lib/mlton/basic/intermediate-computation.sml]
*** Boxities: [t:unb-low]
*** Boxities: [t:single unb-low]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/intermediate-computation.sml.s]
[reading source file:	../lib/mlton/basic/string-map.sig]
[reading source file:	../lib/mlton/basic/string-map.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/string-map.sml.s]
[reading source file:	../lib/mlton/basic/pid.sig]
[reading source file:	../lib/mlton/basic/pid.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/pid.sml.s]
[reading source file:	../lib/mlton/basic/trace.sig]
[reading source file:	../lib/mlton/basic/trace.sml]
*** Boxities: [status:enum]
[compiling body of functor TraceControl (from source mlton-mlkit-mael.mlb->trace.sml) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code2.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code4.s]
[compiling body of functor TraceControl end]
[compiling body of functor TraceControl (from source mlton-mlkit-mael.mlb->trace.sml) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code5.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code7.s]
[compiling body of functor TraceControl end]
[compiling body of functor TraceControl (from source mlton-mlkit-mael.mlb->trace.sml) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code9.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code11.s]
[compiling body of functor TraceControl end]
*** Boxities: [comp:unb-all]
*** Boxities: [debug:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code8.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/trace.sml.code12.s]
[reading source file:	../lib/mlton/basic/stream.sig]
[reading source file:	../lib/mlton/basic/stream.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/stream.sml.s]
[reading source file:	../lib/mlton/basic/ring.sig]
[reading source file:	../lib/mlton/basic/ring.fun]
[reading source file:	../lib/mlton/basic/ring-with-identity.sig]
[reading source file:	../lib/mlton/basic/power.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/power.sml.s]
[reading source file:	../lib/mlton/basic/ring-with-identity.fun]
[reading source file:	../lib/mlton/basic/euclidean-ring.sig]
[reading source file:	../lib/mlton/basic/euclidean-ring.fun]
[reading source file:	../lib/mlton/basic/ordered-ring.sig]
[reading source file:	../lib/mlton/basic/ordered-ring.fun]
[reading source file:	../lib/mlton/basic/integer.sig]
[reading source file:	../lib/mlton/basic/integer.fun]
[reading source file:	../lib/mlton/basic/int.sml]
[compiling body of functor Integer (from source mlton-mlkit-mael.mlb->integer.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code4.s]
[compiling body of functor Ring end]
[compiling body of functor RingWithIdentity (from source mlton-mlkit-mael.mlb->ring-with-identity.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code5.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code6.s]
[compiling body of functor RingWithIdentity end]
[compiling body of functor OrderedRing (from source mlton-mlkit-mael.mlb->ordered-ring.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code9.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code7.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code10.s]
[compiling body of functor OrderedRing end]
[compiling body of functor EuclideanRing (from source mlton-mlkit-mael.mlb->euclidean-ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code12.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code13.s]
[compiling body of functor EuclideanRing end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code2.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code3.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code11.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code14.s]
[compiling body of functor Integer end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int.sml.code15.s]
[reading source file:	../lib/mlton/basic/int-inf.sig]
[reading source file:	../lib/mlton/basic/int-inf.sml]
[compiling body of functor Integer (from source mlton-mlkit-mael.mlb->integer.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code3.s]
[compiling body of functor Ring end]
[compiling body of functor RingWithIdentity (from source mlton-mlkit-mael.mlb->ring-with-identity.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code4.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code5.s]
[compiling body of functor RingWithIdentity end]
[compiling body of functor OrderedRing (from source mlton-mlkit-mael.mlb->ordered-ring.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code8.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code6.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code9.s]
[compiling body of functor OrderedRing end]
[compiling body of functor EuclideanRing (from source mlton-mlkit-mael.mlb->euclidean-ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code11.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code12.s]
[compiling body of functor EuclideanRing end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code2.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code10.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code13.s]
[compiling body of functor Integer end]
[compiling body of functor MaxPow2ThatDivides (from source mlton-mlkit-mael.mlb->max-pow-2-that-divides.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code15.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code17.s]
[compiling body of functor MaxPow2ThatDivides end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/int-inf.sml.code14.s]
[reading source file:	../lib/mlton/basic/counter.sig]
[reading source file:	../lib/mlton/basic/counter.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/counter.sml.s]
[reading source file:	../lib/mlton/basic/field.sig]
[reading source file:	../lib/mlton/basic/field.fun]
[reading source file:	../lib/mlton/basic/ordered-field.sig]
[reading source file:	../lib/mlton/basic/ordered-field.fun]
[reading source file:	../lib/mlton/basic/real.sig]
[reading source file:	../lib/mlton/basic/real.sml]
[compiling body of functor Real (from source mlton-mlkit-mael.mlb->real.sml) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code3.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code4.s]
[compiling body of functor Ring end]
[compiling body of functor RingWithIdentity (from source mlton-mlkit-mael.mlb->ring-with-identity.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code6.s]
[compiling body of functor RingWithIdentity end]
[compiling body of functor OrderedRing (from source mlton-mlkit-mael.mlb->ordered-ring.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code9.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code7.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code10.s]
[compiling body of functor OrderedRing end]
[compiling body of functor OrderedField (from source mlton-mlkit-mael.mlb->ordered-field.fun) begin]
[compiling body of functor Field (from source mlton-mlkit-mael.mlb->field.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code12.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code13.s]
[compiling body of functor Field end]
[compiling body of functor OrderedRing (from source mlton-mlkit-mael.mlb->ordered-ring.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code15.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code16.s]
[compiling body of functor OrderedRing end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code11.s]
[compiling body of functor OrderedField end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code18.s]
[compiling body of functor Real end]
[compiling body of functor Real (from source mlton-mlkit-mael.mlb->real.sml) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code22.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code23.s]
[compiling body of functor Ring end]
[compiling body of functor RingWithIdentity (from source mlton-mlkit-mael.mlb->ring-with-identity.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code25.s]
[compiling body of functor RingWithIdentity end]
[compiling body of functor OrderedRing (from source mlton-mlkit-mael.mlb->ordered-ring.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code28.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code26.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code29.s]
[compiling body of functor OrderedRing end]
[compiling body of functor OrderedField (from source mlton-mlkit-mael.mlb->ordered-field.fun) begin]
[compiling body of functor Field (from source mlton-mlkit-mael.mlb->field.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code31.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code32.s]
[compiling body of functor Field end]
[compiling body of functor OrderedRing (from source mlton-mlkit-mael.mlb->ordered-ring.fun) begin]
[compiling body of functor Ring (from source mlton-mlkit-mael.mlb->ring.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code34.s]
[compiling body of functor Ring end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code35.s]
[compiling body of functor OrderedRing end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code30.s]
[compiling body of functor OrderedField end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code20.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/real.sml.code37.s]
[compiling body of functor Real end]
[reading source file:	../lib/mlton/basic/random.sig]
[reading source file:	../lib/mlton/basic/random.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/random.sml.s]
[reading source file:	../lib/mlton/basic/vector.sig]
[reading source file:	../lib/mlton/basic/vector.fun]
[reading source file:	../lib/mlton/basic/vector.sml]
[compiling body of functor Vector (from source mlton-mlkit-mael.mlb->vector.fun) begin]
*** Boxities: [continue:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/vector.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/vector.sml.code2.s]
[compiling body of functor Vector end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/vector.sml.code3.s]
[reading source file:	../lib/mlton/basic/mono-vector.fun]
[reading source file:	../lib/mlton/basic/array.sig]
[reading source file:	../lib/mlton/basic/array.fun]
[reading source file:	../lib/mlton/basic/array.sml]
[compiling body of functor Array (from source mlton-mlkit-mael.mlb->array.fun) begin]
[compiling body of functor Vector (from source mlton-mlkit-mael.mlb->vector.fun) begin]
*** Boxities: [continue:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/array.sml.code3.s]
[compiling body of functor Vector end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/array.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/array.sml.code5.s]
[compiling body of functor Array end]
[reading source file:	../lib/mlton/basic/array2.sig]
[reading source file:	../lib/mlton/basic/array2.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/array2.sml.s]
[reading source file:	../lib/mlton/basic/insertion-sort.sig]
[reading source file:	../lib/mlton/basic/insertion-sort.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/insertion-sort.sml.s]
[reading source file:	../lib/mlton/basic/quick-sort.sig]
[reading source file:	../lib/mlton/basic/quick-sort.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/quick-sort.sml.s]
[reading source file:	../lib/mlton/basic/binary-search.sig]
[reading source file:	../lib/mlton/basic/binary-search.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/binary-search.sml.s]
[reading source file:	../lib/mlton/basic/append-list.sig]
[reading source file:	../lib/mlton/basic/append-list.sml]
*** Boxities: [t:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/append-list.sml.s]
[reading source file:	../lib/mlton/basic/het-container.sig]
[reading source file:	../lib/mlton/basic/het-container.fun]
[reading source file:	../lib/mlton/basic/property-list.sig]
[reading source file:	../lib/mlton/basic/property-list.fun]
[reading source file:	../lib/mlton/basic/property.sig]
[reading source file:	../lib/mlton/basic/property.fun]
[compiling body of functor ExnHetContainer (from source mlton-mlkit-mael.mlb->het-container.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/property.fun.code2.s]
[compiling body of functor ExnHetContainer end]
[compiling body of functor ExnHetContainer (from source mlton-mlkit-mael.mlb->het-container.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/property.fun.code4.s]
[compiling body of functor ExnHetContainer end]
[compiling body of functor PropertyList (from source mlton-mlkit-mael.mlb->property-list.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/property.fun.code5.s]
[compiling body of functor PropertyList end]
[compiling body of functor Property (from source mlton-mlkit-mael.mlb->property.fun) begin]
*** Boxities: [init:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/property.fun.code6.s]
[compiling body of functor Property end]
[reading source file:	../lib/mlton/basic/hash.sig]
[reading source file:	../lib/mlton/basic/hash.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/hash.sml.s]
[reading source file:	../lib/mlton/basic/hash-set.sig]
[reading source file:	../lib/mlton/basic/hash-set.sml]
*** Boxities: [t:single boxed]
[compiling body of functor Fold (from source mlton-mlkit-mael.mlb->fold.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/hash-set.sml.code2.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/hash-set.sml.code3.s]
[compiling body of functor Fold end]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/hash-set.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/hash-set.sml.code5.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/hash-set.sml.code6.s]
[reading source file:	../lib/mlton/basic/hash-table.sig]
[reading source file:	../lib/mlton/basic/hash-table.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/hash-table.sml.s]
[reading source file:	../lib/mlton/basic/char.sig]
[reading source file:	../lib/mlton/basic/char.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/char.sml.s]
[reading source file:	../lib/mlton/basic/string.sig]
[reading source file:	../lib/mlton/basic/string.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/string.sml.s]
[reading source file:	../lib/mlton/basic/instream.sig]
[reading source file:	../lib/mlton/basic/instream.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/instream.sml.s]
[reading source file:	../lib/mlton/basic/buffer.sig]
[reading source file:	../lib/mlton/basic/buffer.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/buffer.sml.s]
[reading source file:	../lib/mlton/basic/env.sig]
[reading source file:	../lib/mlton/basic/env.fun]
[reading source file:	../lib/mlton/basic/queue.sig]
[reading source file:	../lib/mlton/basic/two-list-queue.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/two-list-queue.sml.s]
[reading source file:	../lib/mlton/basic/unique-id.sig]
[reading source file:	../lib/mlton/basic/unique-id.fun]
[reading source file:	../lib/mlton/basic/unique-set.sig]
[reading source file:	../lib/mlton/basic/unique-set.fun]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/unique-set.fun.s]
[reading source file:	../lib/mlton/basic/file.sig]
[reading source file:	../lib/mlton/basic/file.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/file.sml.s]
[reading source file:	../lib/mlton/basic/dir.sig]
[reading source file:	../lib/mlton/basic/dir.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/dir.sml.s]
[reading source file:	../lib/mlton/basic/file-desc.sig]
[reading source file:	../lib/mlton/basic/file-desc.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/file-desc.sml.s]
[reading source file:	../lib/mlton/basic/process.sig]
[reading source file:	../lib/mlton/basic/process.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/process.sml.s]
[reading source file:	../lib/mlton/basic/command-line.sig]
[reading source file:	../lib/mlton/basic/command-line.sml]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/command-line.sml.s]
[reading source file:	../lib/mlton/basic/justify.sig]
[reading source file:	../lib/mlton/basic/justify.sml]
*** Boxities: [t:enum]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/justify.sml.s]
[reading source file:	../lib/mlton/basic/popt.sig]
[reading source file:	../lib/mlton/basic/popt.sml]
*** Boxities: [t:unb-all]
*** Boxities: [optionStyle:enum]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/popt.sml.s]
[reading source file:	../lib/mlton/basic/choice-pattern.sig]
[reading source file:	../lib/mlton/basic/choice-pattern.sml]
*** Boxities: [t:unb-all]
*** Boxities: [state:unb-low]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/choice-pattern.sml.s]
[reading source file:	../lib/mlton/basic/dot-color.sml]
*** Boxities: [t:unb-low]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/dot-color.sml.s]
[reading source file:	../lib/mlton/basic/dot.sig]
[reading source file:	../lib/mlton/basic/dot.sml]
*** Boxities: [direction:enum]
*** Boxities: [fontFamily:enum]
*** Boxities: [fontWeight:enum]
*** Boxities: [justify:enum]
*** Boxities: [orientation:enum]
*** Boxities: [polygonOption:boxed]
*** Boxities: [rank:enum]
*** Boxities: [rankDir:enum]
*** Boxities: [ratio:unb-low]
*** Boxities: [shape:unb-low]
*** Boxities: [style:enum]
*** Boxities: [t:boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/dot.sml.s]
[reading source file:	../lib/mlton/basic/tree.sig]
[reading source file:	../lib/mlton/basic/tree.sml]
[compiling body of functor Tree (from source mlton-mlkit-mael.mlb->tree.sml) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/tree.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/tree.sml.code2.s]
[compiling body of functor Tree end]
[reading source file:	../lib/mlton/basic/directed-graph.sig]
[reading source file:	../lib/mlton/basic/directed-graph.sml]
*** Boxities: [node:single boxed,edge:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [idomRes:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/directed-graph.sml.s]
[reading source file:	../lib/mlton/basic/sexp.sig]
[reading source file:	../lib/mlton/basic/sexp.sml]
*** Boxities: [t:unb-all]
*** Boxities: [parseResult:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/sexp.sml.s]
[reading source file:	../lib/mlton/basic/parse-sexp.sig]
[reading source file:	../lib/mlton/basic/parse-sexp.fun]
[compiling body of functor ParseSexp (from source mlton-mlkit-mael.mlb->parse-sexp.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/parse-sexp.fun.code2.s]
[compiling body of functor ParseSexp end]
[reading source file:	../lib/mlton/basic/regexp.sig]
[reading source file:	../lib/mlton/basic/regexp.sml]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single unb-low]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
[compiling body of functor MonoVector (from source mlton-mlkit-mael.mlb->mono-vector.fun) begin]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/regexp.sml.code3.s]
[compiling body of functor MonoVector end]
[compiling body of functor Env (from source mlton-mlkit-mael.mlb->env.fun) begin]
*** Boxities: [t:single unb-low]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/regexp.sml.code4.s]
[compiling body of functor Env end]
*** Boxities: [machine:unb-all]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/regexp.sml.code1.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/regexp.sml.code2.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/regexp.sml.code5.s]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/regexp.sml.code6.s]
[reading source file:	../lib/mlton/basic/parse.sig]
[reading source file:	../lib/mlton/basic/parse.sml]
*** Boxities: [t:single boxed]
*** Boxities: [result:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [parseResult:boxed]
*** Boxities: [Status:boxed]
[wrote X64 code file:	../lib/mlton/basic/MLB/RI_GC/parse.sml.s]
[reading source file:	../lib/mlton/set/disjoint.sig]
[reading source file:	../lib/mlton/set/disjoint.fun]
[compiling body of functor DisjointSet (from source mlton-mlkit-mael.mlb->disjoint.fun) begin]
*** Boxities: [t:single boxed,parent:unb-all]
[wrote X64 code file:	../lib/mlton/set/MLB/RI_GC/disjoint.fun.code2.s]
[compiling body of functor DisjointSet end]
[reading source file:	../lib/mlton/set/set.sig]
[reading source file:	../lib/mlton/set/unordered.fun]
[reading source file:	../lib/mlton/set/ordered-unique-set.fun]
[reading source file:	../lib/mlton/env/mono-env.sig]
[reading source file:	../lib/mlton/env/basic-env-to-env.fun]
[reading source file:	../lib/mlton/env/mono-env.fun]
[reading source file:	../lib/mlton/env/finite-function.sig]
[reading source file:	../lib/mlton/env/poly-cache.sig]
[reading source file:	../lib/mlton/env/poly-cache.fun]
[compiling body of functor PolyCache (from source mlton-mlkit-mael.mlb->poly-cache.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	../lib/mlton/env/MLB/RI_GC/poly-cache.fun.code2.s]
[compiling body of functor PolyCache end]
[reading source file:	../lib/mlton/lattice/flat-lattice.sig]
[reading source file:	../lib/mlton/lattice/flat-lattice.fun]
[reading source file:	../lib/mlton/lattice/n-point-lattice.sig]
[reading source file:	../lib/mlton/lattice/n-point-lattice.fun]
[reading source file:	../lib/mlton/lattice/powerset-lattice.sig]
[reading source file:	../lib/mlton/lattice/powerset-lattice.fun]
[reading source file:	../lib/mlton/lattice/two-point-lattice.sig]
[reading source file:	../lib/mlton/lattice/two-point-lattice.fun]
[reading source file:	../lib/mlton/lattice/three-point-lattice.sig]
[reading source file:	../lib/mlton/lattice/three-point-lattice.fun]
[reading source file:	control/bits.sml]
[wrote X64 code file:	control/MLB/RI_GC/bits.sml.s]
[reading source file:	control/scale.sml]
*** Boxities: [t:enum]
[wrote X64 code file:	control/MLB/RI_GC/scale.sml.s]
[reading source file:	control/control-flags.sig]
[reading source file:	control/control-flags.sml]
[compiling body of functor Control (from source mlton-mlkit-mael.mlb->control.fun) begin]
[wrote X64 code file:	control/MLB/RI_GC/control-flags.sml.code3.s]
[compiling body of functor Control end]
*** Boxities: [t:enum]
*** Boxities: [t:unb-all]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [parseResult:boxed]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:unb-low]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:unb-low]
*** Boxities: [t:enum]
[wrote X64 code file:	control/MLB/RI_GC/control-flags.sml.code1.s]
[wrote X64 code file:	control/MLB/RI_GC/control-flags.sml.code4.s]
[reading source file:	control/source-pos.sig]
[reading source file:	control/source-pos.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	control/MLB/RI_GC/source-pos.sml.s]
[reading source file:	control/region.sig]
[reading source file:	control/region.sml]
*** Boxities: [t:unb-low]
*** Boxities: [t:single boxed]
[wrote X64 code file:	control/MLB/RI_GC/region.sml.s]
[reading source file:	control/wrapped.sig]
[reading source file:	control/source.sig]
[reading source file:	control/source.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	control/MLB/RI_GC/source.sml.s]
[reading source file:	control/version.sml]
[wrote X64 code file:	control/MLB/RI_GC/version.sml.s]
[reading source file:	control/control.sig]
[reading source file:	control/control.sml]
*** Boxities: [t:enum]
*** Boxities: [display:unb-all]
[wrote X64 code file:	control/MLB/RI_GC/control.sml.s]
[reading source file:	control/system.sig]
[reading source file:	control/system.sml]
[wrote X64 code file:	control/MLB/RI_GC/system.sml.s]
[reading source file:	control/pretty.sig]
[reading source file:	control/pretty.sml]
[wrote X64 code file:	control/MLB/RI_GC/pretty.sml.s]
[reading source file:	atoms/layout-pretty.sml]
*** Boxities: [t:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/layout-pretty.sml.s]
[reading source file:	atoms/char-size.sig]
[reading source file:	atoms/char-size.fun]
[reading source file:	atoms/int-size.sig]
[reading source file:	atoms/int-size.fun]
[reading source file:	atoms/real-size.sig]
[reading source file:	atoms/real-size.fun]
[reading source file:	atoms/word-size.sig]
[reading source file:	atoms/word-size.fun]
[reading source file:	atoms/word-x.sig]
[reading source file:	atoms/word-x.fun]
[reading source file:	atoms/word-x-vector.sig]
[reading source file:	atoms/word-x-vector.fun]
[reading source file:	atoms/real-x.sig]
[reading source file:	atoms/real-x.fun]
[reading source file:	atoms/c-symbol-scope.sig]
[reading source file:	atoms/c-symbol-scope.fun]
[reading source file:	atoms/c-type.sig]
[reading source file:	atoms/c-type.fun]
[reading source file:	atoms/c-symbol.sig]
[reading source file:	atoms/c-symbol.fun]
[reading source file:	atoms/c-function.sig]
[reading source file:	atoms/c-function.fun]
[reading source file:	atoms/const.sig]
[reading source file:	atoms/const.fun]
[reading source file:	atoms/symbol.sig]
[reading source file:	atoms/symbol.fun]
[reading source file:	atoms/field.sig]
[reading source file:	atoms/field.fun]
[reading source file:	atoms/record.sig]
[reading source file:	atoms/record.fun]
[reading source file:	atoms/id.sig]
[reading source file:	atoms/id.fun]
[wrote X64 code file:	atoms/MLB/RI_GC/id.fun.s]
[reading source file:	atoms/tyvar.sig]
[reading source file:	atoms/tyvar.fun]
[reading source file:	atoms/admits-equality.sig]
[reading source file:	atoms/admits-equality.fun]
[reading source file:	atoms/tycon-kind.sig]
[reading source file:	atoms/tycon-kind.fun]
[reading source file:	atoms/prim-tycons.sig]
[reading source file:	atoms/prim-tycons.fun]
[reading source file:	atoms/tycon.sig]
[reading source file:	atoms/tycon.fun]
[reading source file:	atoms/prim-cons.sig]
[reading source file:	atoms/prim-cons.fun]
[reading source file:	atoms/con-.sig]
[reading source file:	atoms/con-.fun]
[reading source file:	atoms/var.sig]
[reading source file:	atoms/var.fun]
[reading source file:	atoms/func.sig]
[reading source file:	atoms/label.sig]
[reading source file:	atoms/ffi.sig]
[reading source file:	atoms/ffi.fun]
[reading source file:	atoms/cases.sig]
[reading source file:	atoms/cases.fun]
[reading source file:	atoms/prim.sig]
[reading source file:	atoms/prim.fun]
[reading source file:	atoms/prod.sig]
[reading source file:	atoms/prod.fun]
[reading source file:	atoms/handler.sig]
[reading source file:	atoms/handler.fun]
[reading source file:	atoms/return.sig]
[reading source file:	atoms/return.fun]
[reading source file:	atoms/source-info.sig]
[reading source file:	atoms/source-info.fun]
[reading source file:	atoms/profile-exp.sig]
[reading source file:	atoms/profile-exp.fun]
[reading source file:	atoms/source-maps.sig]
[reading source file:	atoms/source-maps.fun]
[reading source file:	atoms/atoms.sig]
[reading source file:	atoms/atoms.fun]
[reading source file:	atoms/generic-scheme.sig]
[reading source file:	atoms/generic-scheme.fun]
[reading source file:	atoms/type-ops.sig]
[reading source file:	atoms/type-ops.fun]
[reading source file:	atoms/hash-type.sig]
[reading source file:	atoms/hash-type.fun]
[reading source file:	atoms/atoms-structure.sml]
[compiling body of functor Atoms (from source mlton-mlkit-mael.mlb->atoms.fun) begin]
[compiling body of functor CharSize (from source mlton-mlkit-mael.mlb->char-size.fun) begin]
*** Boxities: [t:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code2.s]
[compiling body of functor CharSize end]
[compiling body of functor IntSize (from source mlton-mlkit-mael.mlb->int-size.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code3.s]
[compiling body of functor IntSize end]
[compiling body of functor RealSize (from source mlton-mlkit-mael.mlb->real-size.fun) begin]
*** Boxities: [t:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code4.s]
[compiling body of functor RealSize end]
[compiling body of functor WordSize (from source mlton-mlkit-mael.mlb->word-size.fun) begin]
*** Boxities: [t:single unb-low]
*** Boxities: [prim:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code5.s]
[compiling body of functor WordSize end]
[compiling body of functor WordX (from source mlton-mlkit-mael.mlb->word-x.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code7.s]
[compiling body of functor WordX end]
[compiling body of functor WordXVector (from source mlton-mlkit-mael.mlb->word-x-vector.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code9.s]
[compiling body of functor WordXVector end]
[compiling body of functor RealX (from source mlton-mlkit-mael.mlb->real-x.fun) begin]
*** Boxities: [t:unb-all]
*** Boxities: [r:single boxed]
*** Boxities: [decon:unb-all]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code11.s]
[compiling body of functor RealX end]
[compiling body of functor CSymbolScope (from source mlton-mlkit-mael.mlb->c-symbol-scope.fun) begin]
*** Boxities: [t:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code12.s]
[compiling body of functor CSymbolScope end]
[compiling body of functor CType (from source mlton-mlkit-mael.mlb->c-type.fun) begin]
*** Boxities: [t:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code14.s]
[compiling body of functor CType end]
[compiling body of functor CFunction (from source mlton-mlkit-mael.mlb->c-function.fun) begin]
*** Boxities: [t:enum]
*** Boxities: [t:unb-low]
*** Boxities: [t:unb-low]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code16.s]
[compiling body of functor CFunction end]
[compiling body of functor CSymbol (from source mlton-mlkit-mael.mlb->c-symbol.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code18.s]
[compiling body of functor CSymbol end]
[compiling body of functor Const (from source mlton-mlkit-mael.mlb->const.fun) begin]
*** Boxities: [t:unb-all]
*** Boxities: [t:boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code20.s]
[compiling body of functor Const end]
[compiling body of functor Symbol (from source mlton-mlkit-mael.mlb->symbol.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code21.s]
[compiling body of functor Symbol end]
[compiling body of functor Field (from source mlton-mlkit-mael.mlb->field.fun) begin]
*** Boxities: [t:boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code23.s]
[compiling body of functor Field end]
[compiling body of functor Record (from source mlton-mlkit-mael.mlb->record.fun) begin]
*** Boxities: [t:unb-all]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code24.s]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code25.s]
[compiling body of functor Record end]
[compiling body of functor Record (from source mlton-mlkit-mael.mlb->record.fun) begin]
*** Boxities: [t:unb-all]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code26.s]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code27.s]
[compiling body of functor Record end]
[compiling body of functor Tyvar (from source mlton-mlkit-mael.mlb->tyvar.fun) begin]
[compiling body of functor Id (from source mlton-mlkit-mael.mlb->id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code29.s]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code30.s]
[compiling body of functor Id end]
[compiling body of functor Tyvar end]
[compiling body of functor AdmitsEquality (from source mlton-mlkit-mael.mlb->admits-equality.fun) begin]
*** Boxities: [t:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code32.s]
[compiling body of functor AdmitsEquality end]
[compiling body of functor TyconKind (from source mlton-mlkit-mael.mlb->tycon-kind.fun) begin]
*** Boxities: [t:boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code33.s]
[compiling body of functor TyconKind end]
[compiling body of functor Tycon (from source mlton-mlkit-mael.mlb->tycon.fun) begin]
[compiling body of functor Id (from source mlton-mlkit-mael.mlb->id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code36.s]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code37.s]
[compiling body of functor Id end]
[compiling body of functor PrimTycons (from source mlton-mlkit-mael.mlb->prim-tycons.fun) begin]
*** Boxities: [binding_context:enum]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code40.s]
[compiling body of functor PrimTycons end]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code41.s]
[compiling body of functor Tycon end]
[compiling body of functor Con (from source mlton-mlkit-mael.mlb->con-.fun) begin]
[compiling body of functor Id (from source mlton-mlkit-mael.mlb->id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code43.s]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code44.s]
[compiling body of functor Id end]
[compiling body of functor PrimCons (from source mlton-mlkit-mael.mlb->prim-cons.fun) begin]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code46.s]
[compiling body of functor PrimCons end]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code47.s]
[compiling body of functor Con end]
[compiling body of functor Var (from source mlton-mlkit-mael.mlb->var.fun) begin]
[compiling body of functor Id (from source mlton-mlkit-mael.mlb->id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code49.s]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code50.s]
[compiling body of functor Id end]
[compiling body of functor Var end]
[compiling body of functor Ffi (from source mlton-mlkit-mael.mlb->ffi.fun) begin]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code54.s]
[compiling body of functor Ffi end]
[compiling body of functor Cases (from source mlton-mlkit-mael.mlb->cases.fun) begin]
*** Boxities: [t:unb-all]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code56.s]
[compiling body of functor Cases end]
[compiling body of functor Prim (from source mlton-mlkit-mael.mlb->prim.fun) begin]
*** Boxities: [t:enum]
*** Boxities: [t:unb-all]
*** Boxities: [t:boxed]
*** Boxities: [t:boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code58.s]
[compiling body of functor Prim end]
[compiling body of functor Prod (from source mlton-mlkit-mael.mlb->prod.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code59.s]
[compiling body of functor Prod end]
[compiling body of functor Handler (from source mlton-mlkit-mael.mlb->handler.fun) begin]
*** Boxities: [t:boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code61.s]
[compiling body of functor Handler end]
[compiling body of functor Return (from source mlton-mlkit-mael.mlb->return.fun) begin]
*** Boxities: [t:unb-low]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code63.s]
[compiling body of functor Return end]
[compiling body of functor SourceInfo (from source mlton-mlkit-mael.mlb->source-info.fun) begin]
*** Boxities: [t:boxed]
*** Boxities: [info:unb-all]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code64.s]
[compiling body of functor SourceInfo end]
[compiling body of functor ProfileExp (from source mlton-mlkit-mael.mlb->profile-exp.fun) begin]
*** Boxities: [t:unb-all]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code66.s]
[compiling body of functor ProfileExp end]
[compiling body of functor SourceMaps (from source mlton-mlkit-mael.mlb->source-maps.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code67.s]
[compiling body of functor SourceMaps end]
[wrote X64 code file:	atoms/MLB/RI_GC/atoms-structure.sml.code52.s]
[compiling body of functor Atoms end]
[reading source file:	ast/ast-const.sig]
[reading source file:	ssa/equatable.sig]
[reading source file:	xml/xml-type.sig]
[reading source file:	core-ml/core-ml.sig]
[reading source file:	match-compile/nested-pat.sig]
[reading source file:	ast/ast-const.fun]
[reading source file:	ssa/equatable.sml]
*** Boxities: [delay:boxed]
*** Boxities: [t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/equatable.sml.s]
[reading source file:	xml/xml-tree.sig]
[reading source file:	core-ml/core-ml.fun]
[reading source file:	match-compile/nested-pat.fun]
[reading source file:	ast/ast-id.sig]
[reading source file:	ssa/ssa-tree.sig]
[reading source file:	xml/xml-tree.fun]
[reading source file:	core-ml/dead-code.sig]
[reading source file:	match-compile/match-compile.sig]
[reading source file:	ast/ast-id.fun]
[reading source file:	ssa/ssa-tree2.sig]
[reading source file:	xml/type-check.sig]
[reading source file:	core-ml/dead-code.fun]
[reading source file:	match-compile/match-compile.fun]
[reading source file:	ast/longid.sig]
[reading source file:	ssa/ssa-tree.fun]
[reading source file:	xml/type-check.fun]
[reading source file:	ast/longid.fun]
[reading source file:	ssa/ssa-tree2.fun]
[reading source file:	xml/scc-funs.sig]
[reading source file:	ast/ast-atoms.sig]
[reading source file:	ssa/direct-exp.sig]
[reading source file:	xml/scc-funs.fun]
[reading source file:	ast/ast-atoms.fun]
[reading source file:	ssa/direct-exp.fun]
[reading source file:	xml/shrink.sig]
[reading source file:	ast/ast-core.sig]
[reading source file:	ssa/analyze.sig]
[reading source file:	xml/shrink.fun]
[reading source file:	ast/ast-core.fun]
[reading source file:	ssa/analyze2.sig]
[reading source file:	xml/xml-transform.sig]
[reading source file:	ast/ast-modules.sig]
[reading source file:	ssa/analyze.fun]
[reading source file:	xml/simplify-types.sig]
[reading source file:	ast/ast-modules.fun]
[reading source file:	ssa/analyze2.fun]
[reading source file:	xml/simplify-types.fun]
[reading source file:	ast/ast-programs.sig]
[reading source file:	ssa/type-check.sig]
[reading source file:	xml/xml-simplify.sig]
[reading source file:	ast/ast-programs.fun]
[reading source file:	ssa/type-check2.sig]
[reading source file:	xml/xml-simplify.fun]
[reading source file:	ast/ast-mlbs.sig]
[reading source file:	ssa/type-check.fun]
[reading source file:	xml/xml.sig]
[reading source file:	ast/ast-mlbs.fun]
[reading source file:	ssa/type-check2.fun]
[reading source file:	xml/xml.fun]
[reading source file:	ast/ast.sig]
[reading source file:	ssa/prepasses.sig]
[reading source file:	xml/sxml-exns.sig]
[reading source file:	ast/ast.fun]
[reading source file:	ssa/prepasses2.sig]
[reading source file:	xml/monomorphise.sig]
[reading source file:	ast/ast-structure.sml]
[compiling body of functor Ast (from source mlton-mlkit-mael.mlb->ast.fun) begin]
[compiling body of functor AstMLBs (from source mlton-mlkit-mael.mlb->ast-mlbs.fun) begin]
[compiling body of functor AstPrograms (from source mlton-mlkit-mael.mlb->ast-programs.fun) begin]
[compiling body of functor AstModules (from source mlton-mlkit-mael.mlb->ast-modules.fun) begin]
[compiling body of functor AstAtoms (from source mlton-mlkit-mael.mlb->ast-atoms.fun) begin]
[compiling body of functor AstConst (from source mlton-mlkit-mael.mlb->ast-const.fun) begin]
*** Boxities: [node:unb-all]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code7.s]
[compiling body of functor AstConst end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code9.s]
[compiling body of functor AstId end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code12.s]
[compiling body of functor AstId end]
[compiling body of functor PrimTycons (from source mlton-mlkit-mael.mlb->prim-tycons.fun) begin]
*** Boxities: [binding_context:enum]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code14.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code15.s]
[compiling body of functor PrimTycons end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code18.s]
[compiling body of functor AstId end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code20.s]
[compiling body of functor AstId end]
[compiling body of functor PrimCons (from source mlton-mlkit-mael.mlb->prim-cons.fun) begin]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code22.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code23.s]
[compiling body of functor PrimCons end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code26.s]
[compiling body of functor AstId end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code28.s]
[compiling body of functor AstId end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code30.s]
[compiling body of functor AstId end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code33.s]
[compiling body of functor AstId end]
[compiling body of functor AstId (from source mlton-mlkit-mael.mlb->ast-id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code35.s]
[compiling body of functor AstId end]
[compiling body of functor Longid (from source mlton-mlkit-mael.mlb->longid.fun) begin]
*** Boxities: [node:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code38.s]
[compiling body of functor Longid end]
[compiling body of functor Longid (from source mlton-mlkit-mael.mlb->longid.fun) begin]
*** Boxities: [node:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code41.s]
[compiling body of functor Longid end]
[compiling body of functor Longid (from source mlton-mlkit-mael.mlb->longid.fun) begin]
*** Boxities: [node:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code43.s]
[compiling body of functor Longid end]
[compiling body of functor Longid (from source mlton-mlkit-mael.mlb->longid.fun) begin]
*** Boxities: [node:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code46.s]
[compiling body of functor Longid end]
[compiling body of functor Longid (from source mlton-mlkit-mael.mlb->longid.fun) begin]
*** Boxities: [node:single boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code48.s]
[compiling body of functor Longid end]
*** Boxities: [node:boxed]
*** Boxities: [bindStyle:boxed]
*** Boxities: [node:single boxed]
*** Boxities: [node:single boxed]
*** Boxities: [node:unb-all]
*** Boxities: [node:unb-all]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code10.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code24.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code31.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code36.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code39.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code49.s]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code50.s]
[compiling body of functor AstAtoms end]
[compiling body of functor AstCore (from source mlton-mlkit-mael.mlb->ast-core.fun) begin]
*** Boxities: [t:unb-all]
*** Boxities: [t:enum]
*** Boxities: [node:unb-all,item:unb-all]
*** Boxities: [node:unb-all]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [matchNode:boxed,expNode:boxed,decNode:boxed]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code51.s]
[compiling body of functor AstCore end]
*** Boxities: [node:single boxed]
*** Boxities: [node:unb-all]
*** Boxities: [specNode:unb-all,sigexpNode:unb-all,sigConst:unb-all]
*** Boxities: [strexpNode:unb-all,strdecNode:unb-all]
*** Boxities: [node:unb-all]
*** Boxities: [node:unb-all]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code52.s]
[compiling body of functor AstModules end]
*** Boxities: [t:single unb-low]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code53.s]
[compiling body of functor AstPrograms end]
*** Boxities: [basexpNode:unb-all,basdecNode:unb-all]
[wrote X64 code file:	ast/MLB/RI_GC/ast-structure.sml.code54.s]
[compiling body of functor AstMLBs end]
[compiling body of functor Ast end]
[reading source file:	ssa/prepasses.fun]
[reading source file:	xml/monomorphise.fun]
[reading source file:	elaborate/decs.sig]
[reading source file:	front-end/ml.grm.sig]
[reading source file:	ssa/prepasses2.fun]
[reading source file:	xml/sxml-tree.sig]
[reading source file:	elaborate/decs.fun]
[reading source file:	front-end/ml.grm.sml]
[reading source file:	ssa/shrink.sig]
[reading source file:	xml/implement-exceptions.fun]
[reading source file:	elaborate/type-env.sig]
[reading source file:	front-end/ml.lex.sml]
[reading source file:	ssa/shrink2.sig]
[reading source file:	xml/implement-suffix.fun]
[reading source file:	elaborate/type-env.fun]
[reading source file:	front-end/front-end.sig]
[reading source file:	ssa/shrink.fun]
[reading source file:	xml/polyvariance.fun]
[reading source file:	elaborate/interface.sig]
[reading source file:	front-end/front-end.fun]
[reading source file:	ssa/shrink2.fun]
[reading source file:	xml/cps-transform.fun]
[reading source file:	elaborate/interface.fun]
[reading source file:	front-end/mlb.grm.sig]
[reading source file:	ssa/restore.sig]
[reading source file:	xml/sxml-simplify.sig]
[reading source file:	elaborate/elaborate-env.sig]
[reading source file:	front-end/mlb.grm.sml]
[reading source file:	ssa/restore.fun]
[reading source file:	xml/sxml-simplify.fun]
[reading source file:	elaborate/elaborate-env.fun]
[reading source file:	front-end/mlb.lex.sml]
[reading source file:	ssa/ssa-transform.sig]
[reading source file:	xml/sxml.sig]
[reading source file:	elaborate/precedence-parse.sig]
[reading source file:	front-end/mlb-front-end.sig]
[reading source file:	ssa/ssa2-transform.sig]
[reading source file:	xml/sxml.fun]
[reading source file:	elaborate/precedence-parse.fun]
[reading source file:	front-end/mlb-front-end.fun]
[reading source file:	ssa/common-arg.fun]
[reading source file:	xml/xml-structures.sml]
[compiling body of functor Xml (from source mlton-mlkit-mael.mlb->xml.fun) begin]
[compiling body of functor XmlTree (from source mlton-mlkit-mael.mlb->xml-tree.fun) begin]
[compiling body of functor HashType (from source mlton-mlkit-mael.mlb->hash-type.fun) begin]
*** Boxities: [tree:unb-all,t:single boxed]
[compiling body of functor TypeOps (from source mlton-mlkit-mael.mlb->type-ops.fun) begin]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code5.s]
[compiling body of functor TypeOps end]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code3.s]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code6.s]
[compiling body of functor HashType end]
*** Boxities: [dest:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [primExp:boxed,lambda:boxed,exp:boxed,dec:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code2.s]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code7.s]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code8.s]
[compiling body of functor XmlTree end]
[compiling body of functor TypeCheck (from source mlton-mlkit-mael.mlb->type-check.fun) begin]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code9.s]
[compiling body of functor TypeCheck end]
[compiling body of functor Shrink (from source mlton-mlkit-mael.mlb->shrink.fun) begin]
*** Boxities: [value:unb-all,t:unb-all]
*** Boxities: [t:boxed]
[compiling body of functor SccFuns (from source mlton-mlkit-mael.mlb->scc-funs.fun) begin]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code11.s]
[compiling body of functor SccFuns end]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code10.s]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code12.s]
[compiling body of functor Shrink end]
[compiling body of functor XmlSimplify (from source mlton-mlkit-mael.mlb->xml-simplify.fun) begin]
[compiling body of functor SimplifyTypes (from source mlton-mlkit-mael.mlb->simplify-types.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code15.s]
[compiling body of functor SimplifyTypes end]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code16.s]
[compiling body of functor XmlSimplify end]
[compiling body of functor Xml end]
[compiling body of functor Sxml (from source mlton-mlkit-mael.mlb->sxml.fun) begin]
[compiling body of functor SxmlSimplify (from source mlton-mlkit-mael.mlb->sxml-simplify.fun) begin]
[compiling body of functor ImplementExceptions (from source mlton-mlkit-mael.mlb->implement-exceptions.fun) begin]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code21.s]
[compiling body of functor ImplementExceptions end]
[compiling body of functor ImplementSuffix (from source mlton-mlkit-mael.mlb->implement-suffix.fun) begin]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code23.s]
[compiling body of functor ImplementSuffix end]
[compiling body of functor Polyvariance (from source mlton-mlkit-mael.mlb->polyvariance.fun) begin]
*** Boxities: [info:unb-all]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code25.s]
[compiling body of functor Polyvariance end]
[compiling body of functor CPSTransform (from source mlton-mlkit-mael.mlb->cps-transform.fun) begin]
*** Boxities: [style:enum]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code27.s]
[compiling body of functor CPSTransform end]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code18.s]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code28.s]
[compiling body of functor SxmlSimplify end]
[compiling body of functor Sxml end]
[compiling body of functor Monomorphise (from source mlton-mlkit-mael.mlb->monomorphise.fun) begin]
[wrote X64 code file:	xml/MLB/RI_GC/xml-structures.sml.code30.s]
[compiling body of functor Monomorphise end]
[reading source file:	elaborate/scope.sig]
[reading source file:	front-end/front-end-structures.sml]
[compiling body of functor FrontEnd (from source mlton-mlkit-mael.mlb->front-end.fun) begin]
[compiling body of functor MLLrValsFun (from source mlton-mlkit-mael.mlb->ml.grm.sml) begin]
*** Boxities: [svalue:unb-all]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code5.s]
[compiling body of functor MLLrValsFun end]
[compiling body of functor MLLexFun (from source mlton-mlkit-mael.mlb->ml.lex.sml) begin]
*** Boxities: [yyfinstate:single unb-all]
*** Boxities: [yystartstate:single unb-all]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code8.s]
[compiling body of functor MLLexFun end]
[compiling body of functor JoinWithArg (from source mlton-mlkit-mael.mlb->join.sml) begin]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code11.s]
[compiling body of functor JoinWithArg end]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code12.s]
[compiling body of functor FrontEnd end]
[compiling body of functor MLBFrontEnd (from source mlton-mlkit-mael.mlb->mlb-front-end.fun) begin]
[compiling body of functor MLBLrValsFun (from source mlton-mlkit-mael.mlb->mlb.grm.sml) begin]
*** Boxities: [svalue:unb-all]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code15.s]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code17.s]
[compiling body of functor MLBLrValsFun end]
[compiling body of functor MLBLexFun (from source mlton-mlkit-mael.mlb->mlb.lex.sml) begin]
*** Boxities: [yyfinstate:single unb-all]
*** Boxities: [yystartstate:single unb-all]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code20.s]
[compiling body of functor MLBLexFun end]
[compiling body of functor JoinWithArg (from source mlton-mlkit-mael.mlb->join.sml) begin]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code23.s]
[compiling body of functor JoinWithArg end]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code14.s]
[wrote X64 code file:	front-end/MLB/RI_GC/front-end-structures.sml.code24.s]
[compiling body of functor MLBFrontEnd end]
[reading source file:	ssa/common-block.fun]
[reading source file:	elaborate/scope.fun]
[reading source file:	ssa/common-subexp.fun]
[reading source file:	elaborate/elaborate-core.sig]
[reading source file:	ssa/global.sig]
[reading source file:	elaborate/elaborate-core.fun]
[reading source file:	ssa/global.fun]
[reading source file:	elaborate/elaborate-sigexp.sig]
[reading source file:	ssa/multi.sig]
[reading source file:	elaborate/elaborate-sigexp.fun]
[reading source file:	ssa/multi.fun]
[reading source file:	elaborate/elaborate-modules.sig]
[reading source file:	ssa/combine-conversions.fun]
[reading source file:	elaborate/elaborate-modules.fun]
[reading source file:	ssa/constant-propagation.fun]
[reading source file:	elaborate/elaborate-programs.sig]
[reading source file:	ssa/contify.fun]
[reading source file:	elaborate/elaborate-programs.fun]
[reading source file:	ssa/deep-flatten.fun]
[reading source file:	elaborate/elaborate-mlbs.sig]
[reading source file:	ssa/duplicate-globals.fun]
[reading source file:	elaborate/elaborate-mlbs.fun]
[reading source file:	ssa/flatten.fun]
[reading source file:	elaborate/elaborate.sig]
[reading source file:	ssa/inline.sig]
[reading source file:	elaborate/elaborate.fun]
[reading source file:	ssa/inline.fun]
[reading source file:	elaborate/elaborate-structures.sml]
[compiling body of functor TypeEnv (from source mlton-mlkit-mael.mlb->type-env.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:enum]
*** Boxities: [ty:boxed,t:boxed]
*** Boxities: [status:enum]
[compiling body of functor TypeOps (from source mlton-mlkit-mael.mlb->type-ops.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code4.s]
[compiling body of functor TypeOps end]
*** Boxities: [t:boxed]
*** Boxities: [t:unb-all]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code2.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code5.s]
[compiling body of functor TypeEnv end]
[compiling body of functor CoreML (from source mlton-mlkit-mael.mlb->core-ml.fun) begin]
*** Boxities: [t:boxed,node:boxed]
*** Boxities: [t:enum]
*** Boxities: [lambda:boxed,expNode:boxed,exp:boxed,dec:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code6.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code7.s]
[compiling body of functor CoreML end]
[compiling body of functor DeadCode (from source mlton-mlkit-mael.mlb->dead-code.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code9.s]
[compiling body of functor DeadCode end]
[compiling body of functor Elaborate (from source mlton-mlkit-mael.mlb->elaborate.fun) begin]
[compiling body of functor ElaborateEnv (from source mlton-mlkit-mael.mlb->elaborate-env.fun) begin]
[compiling body of functor Decs (from source mlton-mlkit-mael.mlb->decs.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code15.s]
[compiling body of functor Decs end]
*** Boxities: [t:single boxed]
[compiling body of functor UniqueId (from source mlton-mlkit-mael.mlb->unique-id.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code18.s]
[compiling body of functor UniqueId end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:enum]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [node:boxed]
[compiling body of functor Interface (from source mlton-mlkit-mael.mlb->interface.fun) begin]
*** Boxities: [t:enum]
[compiling body of functor IntUniqueId (from source mlton-mlkit-mael.mlb->unique-id.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code24.s]
[compiling body of functor IntUniqueId end]
*** Boxities: [t:single single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:boxed]
[compiling body of functor GenericScheme (from source mlton-mlkit-mael.mlb->generic-scheme.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code27.s]
[compiling body of functor GenericScheme end]
*** Boxities: [t:single boxed]
*** Boxities: [node:unb-all]
*** Boxities: [dest:boxed]
*** Boxities: [realization:boxed]
[compiling body of functor IntUniqueId (from source mlton-mlkit-mael.mlb->unique-id.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code30.s]
[compiling body of functor IntUniqueId end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single single boxed]
*** Boxities: [peekResult:boxed]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code22.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code25.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code28.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code31.s]
[compiling body of functor Interface end]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [handleUses:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [z:unb-all]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code13.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code16.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code19.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code20.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code32.s]
[compiling body of functor ElaborateEnv end]
[compiling body of functor ElaborateMLBs (from source mlton-mlkit-mael.mlb->elaborate-mlbs.fun) begin]
[compiling body of functor ElaboratePrograms (from source mlton-mlkit-mael.mlb->elaborate-programs.fun) begin]
[compiling body of functor ElaborateModules (from source mlton-mlkit-mael.mlb->elaborate-modules.fun) begin]
[compiling body of functor ElaborateSigexp (from source mlton-mlkit-mael.mlb->elaborate-sigexp.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code41.s]
[compiling body of functor ElaborateSigexp end]
[compiling body of functor ElaborateCore (from source mlton-mlkit-mael.mlb->elaborate-core.fun) begin]
[compiling body of functor PrecedenceParse (from source mlton-mlkit-mael.mlb->precedence-parse.fun) begin]
*** Boxities: [t:unb-low]
*** Boxities: [precStack:unb-all]
*** Boxities: [t:unb-all]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code45.s]
[compiling body of functor PrecedenceParse end]
[compiling body of functor Scope (from source mlton-mlkit-mael.mlb->scope.fun) begin]
[compiling body of functor UnorderedSet (from source mlton-mlkit-mael.mlb->unordered.fun) begin]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code48.s]
[compiling body of functor UnorderedSet end]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code49.s]
[compiling body of functor Scope end]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code43.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code50.s]
[compiling body of functor ElaborateCore end]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code39.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code51.s]
[compiling body of functor ElaborateModules end]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code37.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code52.s]
[compiling body of functor ElaboratePrograms end]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code35.s]
[wrote X64 code file:	elaborate/MLB/RI_GC/elaborate-structures.sml.code53.s]
[compiling body of functor ElaborateMLBs end]
[compiling body of functor Elaborate end]
[reading source file:	ssa/introduce-loops.fun]
[reading source file:	defunctorize/defunctorize.sig]
[reading source file:	ssa/known-case.fun]
[reading source file:	defunctorize/defunctorize.fun]
[reading source file:	ssa/local-flatten.fun]
[reading source file:	defunctorize/defunctorize-structure.sml]
[compiling body of functor Defunctorize (from source mlton-mlkit-mael.mlb->defunctorize.fun) begin]
[compiling body of functor NestedPat (from source mlton-mlkit-mael.mlb->nested-pat.fun) begin]
*** Boxities: [t:boxed,node:boxed]
[wrote X64 code file:	defunctorize/MLB/RI_GC/defunctorize-structure.sml.code4.s]
[compiling body of functor NestedPat end]
[compiling body of functor MatchCompile (from source mlton-mlkit-mael.mlb->match-compile.fun) begin]
*** Boxities: [t:boxed]
[compiling body of functor MonoEnv (from source mlton-mlkit-mael.mlb->mono-env.fun) begin]
*** Boxities: [t:single unb-low]
[compiling body of functor BasicEnvToEnv (from source mlton-mlkit-mael.mlb->basic-env-to-env.fun) begin]
[wrote X64 code file:	defunctorize/MLB/RI_GC/defunctorize-structure.sml.code8.s]
[wrote X64 code file:	defunctorize/MLB/RI_GC/defunctorize-structure.sml.code9.s]
[compiling body of functor BasicEnvToEnv end]
[compiling body of functor MonoEnv end]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single unb-low]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	defunctorize/MLB/RI_GC/defunctorize-structure.sml.code5.s]
[wrote X64 code file:	defunctorize/MLB/RI_GC/defunctorize-structure.sml.code6.s]
[wrote X64 code file:	defunctorize/MLB/RI_GC/defunctorize-structure.sml.code10.s]
[compiling body of functor MatchCompile end]
[wrote X64 code file:	defunctorize/MLB/RI_GC/defunctorize-structure.sml.code11.s]
[compiling body of functor Defunctorize end]
[reading source file:	ssa/local-ref.fun]
[reading source file:	ssa/loop-invariant.fun]
[reading source file:	ssa/loop-unroll.fun]
[reading source file:	ssa/loop-unswitch.fun]
[reading source file:	ssa/poly-equal.fun]
[reading source file:	ssa/poly-hash.fun]
[reading source file:	ssa/profile.sig]
[reading source file:	ssa/profile.fun]
[reading source file:	ssa/profile2.sig]
[reading source file:	ssa/profile2.fun]
[reading source file:	ssa/redundant-tests.fun]
[reading source file:	ssa/redundant.fun]
[reading source file:	ssa/ref-flatten.fun]
[reading source file:	ssa/remove-unused.fun]
[reading source file:	ssa/remove-unused2.fun]
[reading source file:	ssa/share-zero-vec.fun]
[reading source file:	ssa/simplify-types.fun]
[reading source file:	ssa/split-types.fun]
[reading source file:	ssa/useless.fun]
[reading source file:	ssa/zone.fun]
[reading source file:	ssa/simplify.sig]
[reading source file:	ssa/simplify2.sig]
[reading source file:	ssa/simplify.fun]
[reading source file:	ssa/simplify2.fun]
[reading source file:	ssa/ssa.sig]
[reading source file:	ssa/ssa2.sig]
[reading source file:	ssa/ssa.fun]
[reading source file:	ssa/ssa2.fun]
[reading source file:	ssa/ssa-to-ssa2.sig]
[reading source file:	ssa/ssa-to-ssa2.fun]
[reading source file:	ssa/ssa-structures.sml]
[compiling body of functor Ssa (from source mlton-mlkit-mael.mlb->ssa.fun) begin]
[compiling body of functor SsaTree (from source mlton-mlkit-mael.mlb->ssa-tree.fun) begin]
*** Boxities: [tree:unb-all,t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code2.s]
[compiling body of functor SsaTree end]
[compiling body of functor DirectExp (from source mlton-mlkit-mael.mlb->direct-exp.fun) begin]
*** Boxities: [t:boxed,cases:boxed]
*** Boxities: [t:unb-all]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code3.s]
[compiling body of functor DirectExp end]
[compiling body of functor Analyze (from source mlton-mlkit-mael.mlb->analyze.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code4.s]
[compiling body of functor Analyze end]
[compiling body of functor TypeCheck (from source mlton-mlkit-mael.mlb->type-check.fun) begin]
*** Boxities: [status:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code5.s]
[compiling body of functor TypeCheck end]
[compiling body of functor PrePasses (from source mlton-mlkit-mael.mlb->prepasses.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code6.s]
[compiling body of functor PrePasses end]
[compiling body of functor Shrink (from source mlton-mlkit-mael.mlb->shrink.fun) begin]
*** Boxities: [value:unb-all,t:single boxed]
*** Boxities: [t:boxed]
[compiling body of functor MonoVector (from source mlton-mlkit-mael.mlb->mono-vector.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code8.s]
[compiling body of functor MonoVector end]
*** Boxities: [t:single boxed,aux:unb-all]
*** Boxities: [state:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code7.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code9.s]
[compiling body of functor Shrink end]
[compiling body of functor Restore (from source mlton-mlkit-mael.mlb->restore.fun) begin]
*** Boxities: [t:single boxed]
[compiling body of functor ThreePointLattice (from source mlton-mlkit-mael.mlb->three-point-lattice.fun) begin]
[compiling body of functor NPointLattice (from source mlton-mlkit-mael.mlb->n-point-lattice.fun) begin]
*** Boxities: [t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code13.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code14.s]
[compiling body of functor NPointLattice end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code11.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code15.s]
[compiling body of functor ThreePointLattice end]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code10.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code16.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code17.s]
[compiling body of functor Restore end]
[compiling body of functor Simplify (from source mlton-mlkit-mael.mlb->simplify.fun) begin]
[compiling body of functor CommonArg (from source mlton-mlkit-mael.mlb->common-arg.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code19.s]
[compiling body of functor CommonArg end]
[compiling body of functor CommonBlock (from source mlton-mlkit-mael.mlb->common-block.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code20.s]
[compiling body of functor CommonBlock end]
[compiling body of functor CommonSubexp (from source mlton-mlkit-mael.mlb->common-subexp.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code21.s]
[compiling body of functor CommonSubexp end]
[compiling body of functor CombineConversions (from source mlton-mlkit-mael.mlb->combine-conversions.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code22.s]
[compiling body of functor CombineConversions end]
[compiling body of functor ConstantPropagation (from source mlton-mlkit-mael.mlb->constant-propagation.fun) begin]
[compiling body of functor Multi (from source mlton-mlkit-mael.mlb->multi.fun) begin]
*** Boxities: [value:enum,t:single boxed]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code25.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code26.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code28.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code29.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code31.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code32.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code24.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code27.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code30.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code33.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code34.s]
[compiling body of functor Multi end]
[compiling body of functor Global (from source mlton-mlkit-mael.mlb->global.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code35.s]
[compiling body of functor Global end]
[compiling body of functor UniqueId (from source mlton-mlkit-mael.mlb->unique-id.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code37.s]
[compiling body of functor UniqueId end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code39.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code40.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [global:boxed]
[compiling body of functor FlatLatticeMono (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-low]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code46.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code47.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code45.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code48.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code49.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code44.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code50.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code51.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code43.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code52.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code53.s]
[compiling body of functor FlatLatticeMono end]
*** Boxities: [t:single boxed]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code57.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code58.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code56.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code59.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code60.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code55.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code61.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code62.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:single boxed]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code66.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code67.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code65.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code68.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code69.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code64.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code70.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code71.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:unb-all]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-low]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code73.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code74.s]
[compiling body of functor FlatLatticeRec end]
*** Boxities: [t:single boxed]
*** Boxities: [value:unb-all,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code42.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code54.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code63.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code72.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code75.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code76.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code77.s]
[compiling body of functor ConstantPropagation end]
[compiling body of functor Contify (from source mlton-mlkit-mael.mlb->contify.fun) begin]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code78.s]
[compiling body of functor Contify end]
[compiling body of functor DuplicateGlobals (from source mlton-mlkit-mael.mlb->duplicate-globals.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code79.s]
[compiling body of functor DuplicateGlobals end]
[compiling body of functor Flatten (from source mlton-mlkit-mael.mlb->flatten.fun) begin]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code81.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code82.s]
[compiling body of functor TwoPointLattice end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code83.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code84.s]
[compiling body of functor Flatten end]
[compiling body of functor Inline (from source mlton-mlkit-mael.mlb->inline.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code85.s]
[compiling body of functor Inline end]
[compiling body of functor IntroduceLoops (from source mlton-mlkit-mael.mlb->introduce-loops.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code86.s]
[compiling body of functor IntroduceLoops end]
[compiling body of functor KnownCase (from source mlton-mlkit-mael.mlb->known-case.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [z:unb-low]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code87.s]
[compiling body of functor KnownCase end]
[compiling body of functor LocalFlatten (from source mlton-mlkit-mael.mlb->local-flatten.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code88.s]
[compiling body of functor LocalFlatten end]
[compiling body of functor LocalRef (from source mlton-mlkit-mael.mlb->local-ref.fun) begin]
[compiling body of functor FlatLatticeMono (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code93.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code94.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code92.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code95.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code96.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code91.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code97.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code98.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code90.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code99.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code100.s]
[compiling body of functor FlatLatticeMono end]
*** Boxities: [t:single boxed]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code102.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code103.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[compiling body of functor Multi (from source mlton-mlkit-mael.mlb->multi.fun) begin]
*** Boxities: [value:enum,t:single boxed]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code107.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code108.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code110.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code111.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code113.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code114.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code106.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code109.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code112.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code115.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code116.s]
[compiling body of functor Multi end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code89.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code101.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code104.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code105.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code117.s]
[compiling body of functor LocalRef end]
[compiling body of functor LoopInvariant (from source mlton-mlkit-mael.mlb->loop-invariant.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code118.s]
[compiling body of functor LoopInvariant end]
[compiling body of functor LoopUnroll (from source mlton-mlkit-mael.mlb->loop-unroll.fun) begin]
*** Boxities: [Bound:unb-all]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code119.s]
[compiling body of functor LoopUnroll end]
[compiling body of functor LoopUnswitch (from source mlton-mlkit-mael.mlb->loop-unswitch.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code120.s]
[compiling body of functor LoopUnswitch end]
[compiling body of functor PolyEqual (from source mlton-mlkit-mael.mlb->poly-equal.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code121.s]
[compiling body of functor PolyEqual end]
[compiling body of functor PolyHash (from source mlton-mlkit-mael.mlb->poly-hash.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code122.s]
[compiling body of functor PolyHash end]
[compiling body of functor Profile (from source mlton-mlkit-mael.mlb->profile.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code123.s]
[compiling body of functor Profile end]
[compiling body of functor Redundant (from source mlton-mlkit-mael.mlb->redundant.fun) begin]
*** Boxities: [t:single boxed,class:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [red:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code124.s]
[compiling body of functor Redundant end]
[compiling body of functor RedundantTests (from source mlton-mlkit-mael.mlb->redundant-tests.fun) begin]
*** Boxities: [t:unb-all]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [result:enum]
*** Boxities: [varInfo:unb-all]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code125.s]
[compiling body of functor RedundantTests end]
[compiling body of functor RemoveUnused (from source mlton-mlkit-mael.mlb->remove-unused.fun) begin]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code127.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code128.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code130.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code131.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code133.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code134.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code136.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code137.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code139.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code140.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [u:boxed]
*** Boxities: [u:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code129.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code132.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code135.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code138.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code141.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code142.s]
[compiling body of functor RemoveUnused end]
[compiling body of functor ShareZeroVec (from source mlton-mlkit-mael.mlb->share-zero-vec.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code143.s]
[compiling body of functor ShareZeroVec end]
[compiling body of functor SimplifyTypes (from source mlton-mlkit-mael.mlb->simplify-types.fun) begin]
[compiling body of functor ThreePointLattice (from source mlton-mlkit-mael.mlb->three-point-lattice.fun) begin]
[compiling body of functor NPointLattice (from source mlton-mlkit-mael.mlb->n-point-lattice.fun) begin]
*** Boxities: [t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code147.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code148.s]
[compiling body of functor NPointLattice end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code145.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code149.s]
[compiling body of functor ThreePointLattice end]
*** Boxities: [t:enum]
*** Boxities: [t:enum]
*** Boxities: [t:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code150.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code151.s]
[compiling body of functor SimplifyTypes end]
[compiling body of functor SplitTypes (from source mlton-mlkit-mael.mlb->split-types.fun) begin]
*** Boxities: [heapType:enum]
*** Boxities: [t:unb-all,con:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code152.s]
[compiling body of functor SplitTypes end]
[compiling body of functor Useless (from source mlton-mlkit-mael.mlb->useless.fun) begin]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code155.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code156.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code158.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code159.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code160.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code161.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [t:single boxed]
*** Boxities: [value:unb-all,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code157.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code162.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code163.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code164.s]
[compiling body of functor Useless end]
*** Boxities: [t:unb-all]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code165.s]
[compiling body of functor Simplify end]
[compiling body of functor Ssa end]
[compiling body of functor Ssa2 (from source mlton-mlkit-mael.mlb->ssa2.fun) begin]
[compiling body of functor SsaTree2 (from source mlton-mlkit-mael.mlb->ssa-tree2.fun) begin]
*** Boxities: [t:boxed]
*** Boxities: [tree:unb-all,t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code167.s]
[compiling body of functor SsaTree2 end]
[compiling body of functor Analyze2 (from source mlton-mlkit-mael.mlb->analyze2.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code168.s]
[compiling body of functor Analyze2 end]
[compiling body of functor TypeCheck2 (from source mlton-mlkit-mael.mlb->type-check2.fun) begin]
*** Boxities: [status:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code169.s]
[compiling body of functor TypeCheck2 end]
[compiling body of functor PrePasses2 (from source mlton-mlkit-mael.mlb->prepasses2.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code170.s]
[compiling body of functor PrePasses2 end]
[compiling body of functor Shrink2 (from source mlton-mlkit-mael.mlb->shrink2.fun) begin]
*** Boxities: [value:unb-all,t:single boxed]
*** Boxities: [t:boxed]
[compiling body of functor MonoVector (from source mlton-mlkit-mael.mlb->mono-vector.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code172.s]
[compiling body of functor MonoVector end]
*** Boxities: [t:single boxed,aux:unb-all]
*** Boxities: [state:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code171.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code173.s]
[compiling body of functor Shrink2 end]
[compiling body of functor Simplify2 (from source mlton-mlkit-mael.mlb->simplify2.fun) begin]
[compiling body of functor DeepFlatten (from source mlton-mlkit-mael.mlb->deep-flatten.fun) begin]
[compiling body of functor Tree (from source mlton-mlkit-mael.mlb->tree.sml) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code177.s]
[compiling body of functor Tree end]
*** Boxities: [info:unb-low]
*** Boxities: [t:enum]
*** Boxities: [t:unb-all]
*** Boxities: [make:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code178.s]
[compiling body of functor DeepFlatten end]
[compiling body of functor Profile2 (from source mlton-mlkit-mael.mlb->profile2.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code179.s]
[compiling body of functor Profile2 end]
[compiling body of functor RefFlatten (from source mlton-mlkit-mael.mlb->ref-flatten.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all,object:single boxed,flat:unb-low,computed:unb-all]
*** Boxities: [value:unb-all]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code181.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code182.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [useStatus:unb-low]
*** Boxities: [t:unb-low]
*** Boxities: [make:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code180.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code183.s]
[compiling body of functor RefFlatten end]
[compiling body of functor RemoveUnused2 (from source mlton-mlkit-mael.mlb->remove-unused2.fun) begin]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code185.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code186.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code188.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code189.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code191.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code192.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code194.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code195.s]
[compiling body of functor TwoPointLattice end]
[compiling body of functor TwoPointLattice (from source mlton-mlkit-mael.mlb->two-point-lattice.fun) begin]
*** Boxities: [value:unb-low,t:single single boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code197.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code198.s]
[compiling body of functor TwoPointLattice end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [u:boxed]
*** Boxities: [u:boxed]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code187.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code190.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code193.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code196.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code199.s]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code200.s]
[compiling body of functor RemoveUnused2 end]
[compiling body of functor Zone (from source mlton-mlkit-mael.mlb->zone.fun) begin]
[compiling body of functor UniqueId (from source mlton-mlkit-mael.mlb->unique-id.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code203.s]
[compiling body of functor UniqueId end]
*** Boxities: [varInfo:unb-low]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code204.s]
[compiling body of functor Zone end]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code205.s]
[compiling body of functor Simplify2 end]
[compiling body of functor Ssa2 end]
[compiling body of functor SsaToSsa2 (from source mlton-mlkit-mael.mlb->ssa-to-ssa2.fun) begin]
[wrote X64 code file:	ssa/MLB/RI_GC/ssa-structures.sml.code207.s]
[compiling body of functor SsaToSsa2 end]
[reading source file:	backend/runtime.sig]
[reading source file:	closure-convert/abstract-value.sig]
[reading source file:	backend/runtime.fun]
[reading source file:	closure-convert/abstract-value.fun]
[reading source file:	backend/objptr-tycon.sig]
[reading source file:	closure-convert/globalize.sig]
[reading source file:	backend/objptr-tycon.fun]
[reading source file:	closure-convert/globalize.fun]
[reading source file:	backend/object-type.sig]
[reading source file:	closure-convert/lambda-free.sig]
[reading source file:	backend/rep-type.sig]
[reading source file:	closure-convert/lambda-free.fun]
[reading source file:	backend/rep-type.fun]
[reading source file:	closure-convert/closure-convert.sig]
[reading source file:	backend/backend-atoms.sig]
[reading source file:	closure-convert/closure-convert.fun]
[reading source file:	backend/backend-atoms.fun]
[reading source file:	closure-convert/closure-convert-structure.sml]
[compiling body of functor ClosureConvert (from source mlton-mlkit-mael.mlb->closure-convert.fun) begin]
[compiling body of functor Globalize (from source mlton-mlkit-mael.mlb->globalize.fun) begin]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code4.s]
[compiling body of functor Globalize end]
[compiling body of functor AbstractValue (from source mlton-mlkit-mael.mlb->abstract-value.fun) begin]
*** Boxities: [t:single boxed]
[compiling body of functor UniqueSet (from source mlton-mlkit-mael.mlb->unique-set.fun) begin]
*** Boxities: [node:unb-all]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code8.s]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code9.s]
[compiling body of functor UniqueSet end]
*** Boxities: [t:single single boxed]
*** Boxities: [t:enum]
*** Boxities: [tree:unb-all]
*** Boxities: [dest:unb-all]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code7.s]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code10.s]
[compiling body of functor AbstractValue end]
*** Boxities: [t:single boxed]
[compiling body of functor LambdaFree (from source mlton-mlkit-mael.mlb->lambda-free.fun) begin]
*** Boxities: [t:enum]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code12.s]
[compiling body of functor LambdaFree end]
*** Boxities: [t:single boxed]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code11.s]
[wrote X64 code file:	closure-convert/MLB/RI_GC/closure-convert-structure.sml.code13.s]
[compiling body of functor ClosureConvert end]
[reading source file:	backend/err.sml]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/err.sml.s]
[reading source file:	backend/object.sig]
[reading source file:	backend/object.fun]
[reading source file:	backend/switch.sig]
[reading source file:	backend/switch.fun]
[reading source file:	backend/rssa-tree.sig]
[reading source file:	backend/rssa-tree.fun]
[reading source file:	backend/rssa-type-check.sig]
[reading source file:	backend/rssa-type-check.fun]
[reading source file:	backend/rssa-shrink.sig]
[reading source file:	backend/rssa-shrink.fun]
[reading source file:	backend/rssa-live.sig]
[reading source file:	backend/rssa-live.fun]
[reading source file:	backend/rssa-restore.sig]
[reading source file:	backend/rssa-restore.fun]
[reading source file:	backend/rssa-transform.sig]
[reading source file:	backend/bounce-vars.fun]
[reading source file:	backend/collect-statics.fun]
[reading source file:	backend/implement-handlers.fun]
[reading source file:	backend/implement-profiling.fun]
[reading source file:	backend/insert-checks.fun]
[reading source file:	backend/rssa-simplify.sig]
[reading source file:	backend/rssa-simplify.fun]
[reading source file:	backend/rssa.sig]
[reading source file:	backend/rssa.fun]
[reading source file:	backend/representation.sig]
[reading source file:	backend/packed-representation.fun]
[reading source file:	backend/ssa2-to-rssa.sig]
[reading source file:	backend/ssa2-to-rssa.fun]
[reading source file:	backend/machine.sig]
[reading source file:	backend/machine.fun]
[reading source file:	backend/allocate-variables.sig]
[reading source file:	backend/allocate-variables.fun]
[reading source file:	backend/equivalence-graph.sig]
[reading source file:	backend/equivalence-graph.fun]
[compiling body of functor EquivalenceGraph (from source mlton-mlkit-mael.mlb->equivalence-graph.fun) begin]
*** Boxities: [t:single single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/equivalence-graph.fun.code1.s]
[compiling body of functor EquivalenceGraph end]
[reading source file:	backend/chunkify.sig]
[reading source file:	backend/chunkify.fun]
[reading source file:	backend/parallel-move.sig]
[reading source file:	backend/parallel-move.fun]
[reading source file:	backend/backend.sig]
[reading source file:	backend/backend.fun]
[reading source file:	backend/backend-structures.sml]
[compiling body of functor BackendAtoms (from source mlton-mlkit-mael.mlb->backend-atoms.fun) begin]
[compiling body of functor Runtime (from source mlton-mlkit-mael.mlb->runtime.fun) begin]
*** Boxities: [t:enum]
*** Boxities: [t:unb-all]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code3.s]
[compiling body of functor Runtime end]
[compiling body of functor ObjptrTycon (from source mlton-mlkit-mael.mlb->objptr-tycon.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code5.s]
[compiling body of functor ObjptrTycon end]
[compiling body of functor RepType (from source mlton-mlkit-mael.mlb->rep-type.fun) begin]
*** Boxities: [t:single boxed,node:unb-all]
*** Boxities: [t:unb-all]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code7.s]
[compiling body of functor RepType end]
[compiling body of functor BackendAtoms end]
[compiling body of functor Machine (from source mlton-mlkit-mael.mlb->machine.fun) begin]
[compiling body of functor Id (from source mlton-mlkit-mael.mlb->id.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code12.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code13.s]
[compiling body of functor Id end]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
[compiling body of functor Object (from source mlton-mlkit-mael.mlb->object.fun) begin]
*** Boxities: [t:unb-all]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code17.s]
[compiling body of functor Object end]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
[compiling body of functor Switch (from source mlton-mlkit-mael.mlb->switch.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code20.s]
[compiling body of functor Switch end]
*** Boxities: [t:unb-all]
*** Boxities: [t:unb-all]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single unb-low]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code14.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code15.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code18.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code21.s]
[compiling body of functor Machine end]
[compiling body of functor Rssa (from source mlton-mlkit-mael.mlb->rssa.fun) begin]
[compiling body of functor RssaTree (from source mlton-mlkit-mael.mlb->rssa-tree.fun) begin]
*** Boxities: [t:unb-all]
[compiling body of functor Object (from source mlton-mlkit-mael.mlb->object.fun) begin]
*** Boxities: [t:unb-all]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code25.s]
[compiling body of functor Object end]
*** Boxities: [t:boxed]
[compiling body of functor Switch (from source mlton-mlkit-mael.mlb->switch.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code30.s]
[compiling body of functor Switch end]
*** Boxities: [t:unb-all]
*** Boxities: [t:unb-all]
*** Boxities: [frameStyle:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[compiling body of functor PowerSetLattice_ListSet (from source mlton-mlkit-mael.mlb->powerset-lattice.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code36.s]
[compiling body of functor PowerSetLattice_ListSet end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code23.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code27.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code28.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code32.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code33.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code34.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code37.s]
[compiling body of functor RssaTree end]
[compiling body of functor RssaTypeCheck (from source mlton-mlkit-mael.mlb->rssa-type-check.fun) begin]
*** Boxities: [t:enum]
[compiling body of functor FlatLatticeMono (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code43.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code44.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code42.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code45.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code46.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code41.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code47.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code48.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code40.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code49.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code50.s]
[compiling body of functor FlatLatticeMono end]
[compiling body of functor FlatLatticeMono (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code56.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code57.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code55.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code58.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code59.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code54.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code60.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code61.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code53.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code62.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code63.s]
[compiling body of functor FlatLatticeMono end]
*** Boxities: [t:single boxed]
*** Boxities: [status:enum]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code38.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code39.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code52.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code65.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code66.s]
[compiling body of functor RssaTypeCheck end]
[compiling body of functor RssaShrink (from source mlton-mlkit-mael.mlb->rssa-shrink.fun) begin]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code67.s]
[compiling body of functor RssaShrink end]
[compiling body of functor RssaLive (from source mlton-mlkit-mael.mlb->rssa-live.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [defuse:unb-all]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code68.s]
[compiling body of functor RssaLive end]
[compiling body of functor RssaRestore (from source mlton-mlkit-mael.mlb->rssa-restore.fun) begin]
*** Boxities: [t:single boxed]
[compiling body of functor ThreePointLattice (from source mlton-mlkit-mael.mlb->three-point-lattice.fun) begin]
[compiling body of functor NPointLattice (from source mlton-mlkit-mael.mlb->n-point-lattice.fun) begin]
*** Boxities: [t:single single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code72.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code73.s]
[compiling body of functor NPointLattice end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code70.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code74.s]
[compiling body of functor ThreePointLattice end]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code69.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code75.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code76.s]
[compiling body of functor RssaRestore end]
[compiling body of functor RssaSimplify (from source mlton-mlkit-mael.mlb->rssa-simplify.fun) begin]
[compiling body of functor BounceVars (from source mlton-mlkit-mael.mlb->bounce-vars.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [varinfo:unb-all]
*** Boxities: [InLoop:unb-low]
*** Boxities: [direction:enum]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code78.s]
[compiling body of functor BounceVars end]
[compiling body of functor CollectStatics (from source mlton-mlkit-mael.mlb->collect-statics.fun) begin]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code79.s]
[compiling body of functor CollectStatics end]
[compiling body of functor ImplementHandlers (from source mlton-mlkit-mael.mlb->implement-handlers.fun) begin]
[compiling body of functor FlatLatticeMono (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code84.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code85.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code83.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code86.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code87.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code82.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code88.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code89.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code81.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code90.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code91.s]
[compiling body of functor FlatLatticeMono end]
*** Boxities: [t:enum]
[compiling body of functor FlatLatticeMono (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeParam (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticePoly (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
[compiling body of functor FlatLatticeRec (from source mlton-mlkit-mael.mlb->flat-lattice.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code96.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code97.s]
[compiling body of functor FlatLatticeRec end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code95.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code98.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code99.s]
[compiling body of functor FlatLatticePoly end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code94.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code100.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code101.s]
[compiling body of functor FlatLatticeParam end]
*** Boxities: [t:boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code93.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code102.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code103.s]
[compiling body of functor FlatLatticeMono end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code80.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code92.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code104.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code105.s]
[compiling body of functor ImplementHandlers end]
[compiling body of functor ImplementProfiling (from source mlton-mlkit-mael.mlb->implement-profiling.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code106.s]
[compiling body of functor ImplementProfiling end]
[compiling body of functor InsertChecks (from source mlton-mlkit-mael.mlb->insert-checks.fun) begin]
*** Boxities: [t:unb-low]
*** Boxities: [t:boxed]
*** Boxities: [limitCheck:boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code107.s]
[compiling body of functor InsertChecks end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code108.s]
[compiling body of functor RssaSimplify end]
[compiling body of functor Rssa end]
[compiling body of functor Backend (from source mlton-mlkit-mael.mlb->backend.fun) begin]
[compiling body of functor AllocateVariables (from source mlton-mlkit-mael.mlb->allocate-variables.fun) begin]
*** Boxities: [t:single unb-low]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [place:enum]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code112.s]
[compiling body of functor AllocateVariables end]
[compiling body of functor Chunkify (from source mlton-mlkit-mael.mlb->chunkify.fun) begin]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code113.s]
[compiling body of functor Chunkify end]
[compiling body of functor ParallelMove (from source mlton-mlkit-mael.mlb->parallel-move.fun) begin]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code114.s]
[compiling body of functor ParallelMove end]
*** Boxities: [t:boxed]
[compiling body of functor UniqueSet (from source mlton-mlkit-mael.mlb->unique-set.fun) begin]
*** Boxities: [node:unb-all]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code116.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code117.s]
[compiling body of functor UniqueSet end]
*** Boxities: [t:single boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code109.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code115.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code118.s]
[compiling body of functor Backend end]
[compiling body of functor Ssa2ToRssa (from source mlton-mlkit-mael.mlb->ssa2-to-rssa.fun) begin]
[compiling body of functor PackedRepresentation (from source mlton-mlkit-mael.mlb->packed-representation.fun) begin]
*** Boxities: [rep:unb-low]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code122.s]
[compiling body of functor PackedRepresentation end]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code120.s]
[wrote X64 code file:	backend/MLB/RI_GC/backend-structures.sml.code123.s]
[compiling body of functor Ssa2ToRssa end]
[reading source file:	codegen/c-codegen/c-codegen.sig]
[reading source file:	codegen/c-codegen/c-codegen.fun]
[reading source file:	codegen/c-codegen/c-codegen-structure.sml]
[compiling body of functor CCodegen (from source mlton-mlkit-mael.mlb->c-codegen.fun) begin]
[wrote X64 code file:	codegen/c-codegen/MLB/RI_GC/c-codegen-structure.sml.code2.s]
[compiling body of functor CCodegen end]
[reading source file:	codegen/amd64-codegen/peephole.sig]
[reading source file:	codegen/llvm-codegen/llvm-codegen.sig]
[reading source file:	codegen/x86-codegen/peephole.sig]
[reading source file:	codegen/amd64-codegen/peephole.fun]
[reading source file:	codegen/llvm-codegen/llvm-codegen.fun]
[reading source file:	codegen/x86-codegen/peephole.fun]
[reading source file:	codegen/amd64-codegen/amd64.sig]
[reading source file:	codegen/llvm-codegen/llvm-codegen-structure.sml]
[compiling body of functor LLVMCodegen (from source mlton-mlkit-mael.mlb->llvm-codegen.fun) begin]
*** Boxities: [t:boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/llvm-codegen/MLB/RI_GC/llvm-codegen-structure.sml.code2.s]
[compiling body of functor LLVMCodegen end]
[reading source file:	codegen/x86-codegen/x86.sig]
[reading source file:	codegen/amd64-codegen/amd64.fun]
[reading source file:	codegen/x86-codegen/x86.fun]
[reading source file:	codegen/amd64-codegen/amd64-pseudo.sig]
[reading source file:	codegen/x86-codegen/x86-pseudo.sig]
[reading source file:	codegen/amd64-codegen/amd64-mlton-basic.sig]
[reading source file:	codegen/x86-codegen/x86-mlton-basic.sig]
[reading source file:	codegen/amd64-codegen/amd64-mlton-basic.fun]
[reading source file:	codegen/x86-codegen/x86-mlton-basic.fun]
[reading source file:	codegen/amd64-codegen/amd64-liveness.sig]
[reading source file:	codegen/x86-codegen/x86-liveness.sig]
[reading source file:	codegen/amd64-codegen/amd64-liveness.fun]
[reading source file:	codegen/x86-codegen/x86-liveness.fun]
[reading source file:	codegen/amd64-codegen/amd64-mlton.sig]
[reading source file:	codegen/x86-codegen/x86-mlton.sig]
[reading source file:	codegen/amd64-codegen/amd64-mlton.fun]
[reading source file:	codegen/x86-codegen/x86-mlton.fun]
[reading source file:	codegen/amd64-codegen/amd64-allocate-registers.sig]
[reading source file:	codegen/x86-codegen/x86-allocate-registers.sig]
[reading source file:	codegen/amd64-codegen/amd64-allocate-registers.fun]
[reading source file:	codegen/x86-codegen/x86-allocate-registers.fun]
[reading source file:	codegen/amd64-codegen/amd64-entry-transfer.sig]
[reading source file:	codegen/x86-codegen/x86-entry-transfer.sig]
[reading source file:	codegen/amd64-codegen/amd64-entry-transfer.fun]
[reading source file:	codegen/x86-codegen/x86-entry-transfer.fun]
[reading source file:	codegen/amd64-codegen/amd64-jump-info.sig]
[reading source file:	codegen/x86-codegen/x86-jump-info.sig]
[reading source file:	codegen/amd64-codegen/amd64-jump-info.fun]
[reading source file:	codegen/x86-codegen/x86-jump-info.fun]
[reading source file:	codegen/amd64-codegen/amd64-loop-info.sig]
[reading source file:	codegen/x86-codegen/x86-loop-info.sig]
[reading source file:	codegen/amd64-codegen/amd64-loop-info.fun]
[reading source file:	codegen/x86-codegen/x86-loop-info.fun]
[reading source file:	codegen/amd64-codegen/amd64-live-transfers.sig]
[reading source file:	codegen/x86-codegen/x86-live-transfers.sig]
[reading source file:	codegen/amd64-codegen/amd64-live-transfers.fun]
[reading source file:	codegen/x86-codegen/x86-live-transfers.fun]
[reading source file:	codegen/amd64-codegen/amd64-generate-transfers.sig]
[reading source file:	codegen/x86-codegen/x86-generate-transfers.sig]
[reading source file:	codegen/amd64-codegen/amd64-generate-transfers.fun]
[reading source file:	codegen/x86-codegen/x86-generate-transfers.fun]
[reading source file:	codegen/amd64-codegen/amd64-simplify.sig]
[reading source file:	codegen/x86-codegen/x86-simplify.sig]
[reading source file:	codegen/amd64-codegen/amd64-simplify.fun]
[reading source file:	codegen/x86-codegen/x86-simplify.fun]
[reading source file:	codegen/amd64-codegen/amd64-translate.sig]
[reading source file:	codegen/x86-codegen/x86-translate.sig]
[reading source file:	codegen/amd64-codegen/amd64-translate.fun]
[reading source file:	codegen/x86-codegen/x86-translate.fun]
[reading source file:	codegen/amd64-codegen/amd64-codegen.sig]
[reading source file:	codegen/x86-codegen/x86-codegen.sig]
[reading source file:	codegen/amd64-codegen/amd64-codegen.fun]
[reading source file:	codegen/x86-codegen/x86-codegen.fun]
[reading source file:	codegen/amd64-codegen/amd64-codegen-structure.sml]
[compiling body of functor amd64Codegen (from source mlton-mlkit-mael.mlb->amd64-codegen.fun) begin]
[compiling body of functor amd64 (from source mlton-mlkit-mael.mlb->amd64.fun) begin]
*** Boxities: [class:enum]
*** Boxities: [t:enum]
*** Boxities: [reg:enum]
*** Boxities: [part:enum]
*** Boxities: [t:single boxed]
*** Boxities: [reg:enum]
*** Boxities: [part:enum]
*** Boxities: [t:single boxed]
*** Boxities: [u:unb-all,t:single boxed]
*** Boxities: [t:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [u:single boxed,t:single boxed]
[compiling body of functor OrderedUniqueSet (from source mlton-mlkit-mael.mlb->ordered-unique-set.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code7.s]
[compiling body of functor OrderedUniqueSet end]
[compiling body of functor UnorderedSet (from source mlton-mlkit-mael.mlb->unordered.fun) begin]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code10.s]
[compiling body of functor UnorderedSet end]
*** Boxities: [t:unb-all]
*** Boxities: [binal:enum]
*** Boxities: [md:enum]
*** Boxities: [unal:enum]
*** Boxities: [sral:enum]
*** Boxities: [movx:enum]
*** Boxities: [condition:enum]
*** Boxities: [sse_binas:enum]
*** Boxities: [sse_unas:enum]
*** Boxities: [sse_binlp:enum]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:unb-all]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single unb-low]
*** Boxities: [t:unb-all]
*** Boxities: [t':single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code4.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code5.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code8.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code11.s]
[compiling body of functor amd64 end]
[compiling body of functor amd64PseudoCheck (from source mlton-mlkit-mael.mlb->amd64-pseudo.sig) begin]
[compiling body of functor amd64PseudoCheck end]
[compiling body of functor amd64MLtonBasic (from source mlton-mlkit-mael.mlb->amd64-mlton-basic.fun) begin]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code15.s]
[compiling body of functor amd64MLtonBasic end]
[compiling body of functor amd64Liveness (from source mlton-mlkit-mael.mlb->amd64-liveness.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code17.s]
[compiling body of functor amd64Liveness end]
[compiling body of functor amd64JumpInfo (from source mlton-mlkit-mael.mlb->amd64-jump-info.fun) begin]
*** Boxities: [status:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code19.s]
[compiling body of functor amd64JumpInfo end]
[compiling body of functor amd64LoopInfo (from source mlton-mlkit-mael.mlb->amd64-loop-info.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code21.s]
[compiling body of functor amd64LoopInfo end]
[compiling body of functor amd64EntryTransfer (from source mlton-mlkit-mael.mlb->amd64-entry-transfer.fun) begin]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code23.s]
[compiling body of functor amd64EntryTransfer end]
[compiling body of functor amd64MLton (from source mlton-mlkit-mael.mlb->amd64-mlton.fun) begin]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code25.s]
[compiling body of functor amd64MLton end]
[compiling body of functor amd64Translate (from source mlton-mlkit-mael.mlb->amd64-translate.fun) begin]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code28.s]
[compiling body of functor amd64Translate end]
[compiling body of functor amd64Simplify (from source mlton-mlkit-mael.mlb->amd64-simplify.fun) begin]
[compiling body of functor Peephole (from source mlton-mlkit-mael.mlb->peephole.fun) begin]
*** Boxities: [statement_border:enum]
*** Boxities: [match_state:unb-all]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code32.s]
[compiling body of functor Peephole end]
[compiling body of functor Peephole (from source mlton-mlkit-mael.mlb->peephole.fun) begin]
*** Boxities: [statement_border:enum]
*** Boxities: [match_state:unb-all]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code37.s]
[compiling body of functor Peephole end]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code30.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code33.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code34.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code38.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code39.s]
[compiling body of functor amd64Simplify end]
[compiling body of functor amd64GenerateTransfers (from source mlton-mlkit-mael.mlb->amd64-generate-transfers.fun) begin]
[compiling body of functor amd64LiveTransfers (from source mlton-mlkit-mael.mlb->amd64-live-transfers.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [u:boxed]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code43.s]
[compiling body of functor amd64LiveTransfers end]
*** Boxities: [gef:single boxed]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code41.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code44.s]
[compiling body of functor amd64GenerateTransfers end]
[compiling body of functor amd64AllocateRegisters (from source mlton-mlkit-mael.mlb->amd64-allocate-registers.fun) begin]
*** Boxities: [futureMemlocTag:enum]
*** Boxities: [futureMemlocPredTag:enum]
*** Boxities: [future:unb-all]
*** Boxities: [commit:enum]
*** Boxities: [commit:boxed]
*** Boxities: [u:unb-all]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code46.s]
[compiling body of functor amd64AllocateRegisters end]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code26.s]
[wrote X64 code file:	codegen/amd64-codegen/MLB/RI_GC/amd64-codegen-structure.sml.code47.s]
[compiling body of functor amd64Codegen end]
[reading source file:	codegen/x86-codegen/x86-codegen-structure.sml]
[compiling body of functor x86Codegen (from source mlton-mlkit-mael.mlb->x86-codegen.fun) begin]
[compiling body of functor x86 (from source mlton-mlkit-mael.mlb->x86.fun) begin]
*** Boxities: [class:enum]
*** Boxities: [t:enum]
*** Boxities: [reg:enum]
*** Boxities: [part:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:single unb-all]
*** Boxities: [u:unb-all,t:single boxed]
*** Boxities: [t:enum]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [u:single boxed,t:single boxed]
[compiling body of functor OrderedUniqueSet (from source mlton-mlkit-mael.mlb->ordered-unique-set.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code7.s]
[compiling body of functor OrderedUniqueSet end]
[compiling body of functor UnorderedSet (from source mlton-mlkit-mael.mlb->unordered.fun) begin]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code10.s]
[compiling body of functor UnorderedSet end]
*** Boxities: [t:boxed]
*** Boxities: [binal:enum]
*** Boxities: [md:enum]
*** Boxities: [unal:enum]
*** Boxities: [sral:enum]
*** Boxities: [movx:enum]
*** Boxities: [condition:enum]
*** Boxities: [fbina:enum]
*** Boxities: [funa:enum]
*** Boxities: [fbinas:enum]
*** Boxities: [fbinasp:enum]
*** Boxities: [fldc:enum]
*** Boxities: [t:unb-all]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:unb-all]
*** Boxities: [t:boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:unb-all]
*** Boxities: [t:single unb-low]
*** Boxities: [t:unb-all]
*** Boxities: [t':single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code4.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code5.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code8.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code11.s]
[compiling body of functor x86 end]
[compiling body of functor x86PseudoCheck (from source mlton-mlkit-mael.mlb->x86-pseudo.sig) begin]
[compiling body of functor x86PseudoCheck end]
[compiling body of functor x86MLtonBasic (from source mlton-mlkit-mael.mlb->x86-mlton-basic.fun) begin]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code15.s]
[compiling body of functor x86MLtonBasic end]
[compiling body of functor x86Liveness (from source mlton-mlkit-mael.mlb->x86-liveness.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code17.s]
[compiling body of functor x86Liveness end]
[compiling body of functor x86JumpInfo (from source mlton-mlkit-mael.mlb->x86-jump-info.fun) begin]
*** Boxities: [status:boxed]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code19.s]
[compiling body of functor x86JumpInfo end]
[compiling body of functor x86LoopInfo (from source mlton-mlkit-mael.mlb->x86-loop-info.fun) begin]
*** Boxities: [t:single boxed]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code21.s]
[compiling body of functor x86LoopInfo end]
[compiling body of functor x86EntryTransfer (from source mlton-mlkit-mael.mlb->x86-entry-transfer.fun) begin]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code23.s]
[compiling body of functor x86EntryTransfer end]
[compiling body of functor x86MLton (from source mlton-mlkit-mael.mlb->x86-mlton.fun) begin]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code25.s]
[compiling body of functor x86MLton end]
[compiling body of functor x86Translate (from source mlton-mlkit-mael.mlb->x86-translate.fun) begin]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code28.s]
[compiling body of functor x86Translate end]
[compiling body of functor x86Simplify (from source mlton-mlkit-mael.mlb->x86-simplify.fun) begin]
[compiling body of functor Peephole (from source mlton-mlkit-mael.mlb->peephole.fun) begin]
*** Boxities: [statement_border:enum]
*** Boxities: [match_state:unb-all]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code32.s]
[compiling body of functor Peephole end]
[compiling body of functor Peephole (from source mlton-mlkit-mael.mlb->peephole.fun) begin]
*** Boxities: [statement_border:enum]
*** Boxities: [match_state:unb-all]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code37.s]
[compiling body of functor Peephole end]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code30.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code33.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code34.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code38.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code39.s]
[compiling body of functor x86Simplify end]
[compiling body of functor x86GenerateTransfers (from source mlton-mlkit-mael.mlb->x86-generate-transfers.fun) begin]
[compiling body of functor x86LiveTransfers (from source mlton-mlkit-mael.mlb->x86-live-transfers.fun) begin]
*** Boxities: [t:single boxed]
*** Boxities: [t:boxed]
*** Boxities: [u:boxed]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code43.s]
[compiling body of functor x86LiveTransfers end]
*** Boxities: [gef:single boxed]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code41.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code44.s]
[compiling body of functor x86GenerateTransfers end]
[compiling body of functor x86AllocateRegisters (from source mlton-mlkit-mael.mlb->x86-allocate-registers.fun) begin]
*** Boxities: [futureMemlocTag:enum]
*** Boxities: [futureMemlocPredTag:enum]
*** Boxities: [future:unb-all]
*** Boxities: [commit:enum]
*** Boxities: [commit:boxed]
*** Boxities: [u:unb-all]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code46.s]
[compiling body of functor x86AllocateRegisters end]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code26.s]
[wrote X64 code file:	codegen/x86-codegen/MLB/RI_GC/x86-codegen-structure.sml.code47.s]
[compiling body of functor x86Codegen end]
[reading source file:	main/compile.sig]
[reading source file:	main/compile-structure.sml]
[wrote X64 code file:	main/MLB/RI_GC/compile-structure.sml.s]
[reading source file:	main/main.sig]
[reading source file:	main/main-structure.sml]
*** Boxities: [t:enum]
*** Boxities: [t:unb-low]
*** Boxities: [t:enum]
*** Boxities: [explicitCodegen:unb-all]
[wrote X64 code file:	main/MLB/RI_GC/main-structure.sml.s]
[reading source file:	call-main.sml]
[wrote X64 code file:	MLB/RI_GC/call-main.sml.s]
[wrote X64 code file:	MLB/RI_GC/base-link_objects.s]
[wrote executable file:	mlton-compile-mlkit]
     1699.10 real      1593.13 user        92.88 sys
          4852195328  maximum resident set size
                   0  average shared memory size
                   0  average unshared data size
                   0  average unshared stack size
            51612262  page reclaims
               13924  page faults
                   0  swaps
                   0  block input operations
                   0  block output operations
                   0  messages sent
                   0  messages received
                   0  signals received
                6279  voluntary context switches
              221368  involuntary context switches
         42001408657  instructions retired
         23325902273  cycles elapsed
            17674240  peak memory footprint
